// Code generated by goctl. DO NOT EDIT.
package types

type LoginReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResp struct {
	Code             string `json:"code"`
	Message          string `json:"message"`
	ID               int64  `json:"id"`
	Username         string `json:"username"`
	Phone            string `json:"phone"`
	Nickname         string `json:"nickname"`
	Gender           string `json:"gender"`
	Avatar           string `json:"avatar"`
	Email            string `json:"email"`
	Status           string `json:"status"`
	CurrentAuthority string `json:"currentAuthority"`
	AccessToken      string `json:"accessToken"`
	AccessExpire     int64  `json:"accessExpire"`
	RefreshAfter     int64  `json:"refreshAfter"`
}

type AddUserReq struct {
	Phone    string `json:"phone"`
	Nickname string `json:"nickname"`
	Gender   string `json:"gender"`
	Avatar   string `json:"avatar"`
	Email    string `json:"email"`
	Status   string `json:"status"`
	RoleID   int64  `json:"role_id,optional"`
}

type AddUserResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type UpdateUserReq struct {
	ID       int64  `json:"id"`
	Username string `json:"username"`
	Phone    string `json:"phone"`
	Nickname string `json:"nickname"`
	Gender   string `json:"gender"`
	Status   string `json:"status"`
	Email    string `json:"email"`
	RoleID   int64  `json:"role_id,optional"`
}

type UpdateUserResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteUserReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteUserResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListUserReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Nickname string `json:"nickname,optional"`
	Phone    string `json:"phone,optional"`
	Email    string `json:"email,optional"`
	Status   string `json:"status,optional"`
	Gander   string `json:"gender,optional"`
}

type User struct {
	ID         int64  `json:"id"`
	Username   string `json:"username"`
	NickName   string `json:"nickname"`
	Phone      string `json:"phone"`
	Gander     string `json:"gender"`
	Avatar     string `json:"avatar"`
	Email      string `json:"email"`
	Status     string `json:"status"`
	CreateTime string `json:"creat_time"`
	UpdateTime string `json:"update_time"`
	RoleID     int64  `json:"role_id"`
	RoleName   string `json:"role_name"`
}

type ListUserResp struct {
	Code     string  `json:"code"`
	Message  string  `json:"message"`
	Data     []*User `json:"data"`
	PageNum  int64   `json:"current,default=1"`
	PageSize int64   `json:"pageSize,default=20"`
	Total    int64   `json:"total"`
}

type ResetPasswordReq struct {
	ID int64 `json:"id"`
}

type ResetPasswordResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type UserInfoResp struct {
	Code        string             `json:"code"`
	Message     string             `json:"message"`
	Avatar      string             `json:"avatar"`
	Name        string             `json:"name"`
	MenuTree    []*ListMenuTree    `json:"menuTree"`
	MenuTreeVue []*ListMenuTreeVue `json:"menuTreeVue"`
}

type ListMenuTree struct {
	Id       int64  `json:"id"`       // 编号
	Path     string `json:"path"`     // 菜单路径
	Name     string `json:"name"`     // 菜单名称
	ParentId int64  `json:"parentId"` // 父菜单ID，一级菜单为0
	Icon     string `json:"icon"`     // 菜单图标
}

type ListMenuTreeVue struct {
	Id           int64        `json:"id"`
	ParentId     int64        `json:"parentId"`
	Title        string       `json:"title"`
	Path         string       `json:"path"`
	Name         string       `json:"name"`
	Icon         string       `json:"icon"`
	VueRedirect  string       `json:"redirect"`
	VueComponent string       `json:"component"`
	Meta         MenuTreeMeta `json:"meta"`
}

type MenuTreeMeta struct {
	Title string `json:"title"`
	Icon  string `json:"icon"`
}

type SelectDataReq struct {
	PageNum  int64 `json:"pageNum,default=1"`
	PageSize int64 `json:"pageSize,default=20"`
}

type SelectDataResp struct {
	Code    string         `json:"code"`
	Message string         `json:"message"`
	RoleAll []*RoleAllResp `json:"roleAll"`
}

type RoleAllResp struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Remark string `json:"remark"`
}

type AddMenuReq struct {
	Name          string `json:"name"`                   // 菜单名称
	ParentId      int64  `json:"parentId,optional"`      // 父菜单ID，一级菜单为0
	Url           string `json:"url,optional"`           // 菜单URL,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
	Perms         string `json:"perms,optional"`         // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
	Type          int64  `json:"type,optional"`          // 类型   0：目录   1：菜单   2：按钮
	Icon          string `json:"icon,optional"`          // 菜单图标
	OrderNum      int64  `json:"orderNum,optional"`      // 排序
	VuePath       string `json:"vuePath,optional"`       // vue系统的path
	VueComponent  string `json:"vueComponent,optional"`  // vue的页面
	VueIcon       string `json:"vueIcon,optional"`       // vue的图标
	VueRedirect   string `json:"vueRedirect,optional"`   // vue的路由重定向
	BackgroundUrl string `json:"backgroundUrl,optional"` // 后台地址
}

type AddMenuResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListMenuReq struct {
	Name string `json:"name,optional"`
	Url  string `json:"url,optional "`
}

type ListMenuData struct {
	Id             int64  `json:"id"`             // 编号
	Name           string `json:"name"`           // 菜单名称
	ParentId       int64  `json:"parentId"`       // 父菜单ID，一级菜单为0
	Url            string `json:"url"`            // 菜单URL,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
	Perms          string `json:"perms"`          // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
	Type           int64  `json:"type"`           // 类型   0：目录   1：菜单   2：按钮
	Icon           string `json:"icon"`           // 菜单图标
	OrderNum       int64  `json:"orderNum"`       // 排序
	CreateBy       string `json:"createBy"`       // 创建人
	CreateTime     string `json:"createTime"`     // 创建时间
	LastUpdateBy   string `json:"lastUpdateBy"`   // 更新人
	LastUpdateTime string `json:"lastUpdateTime"` // 更新时间
	VuePath        string `json:"vuePath"`        // vue系统的path
	VueComponent   string `json:"vueComponent"`   // vue的页面
	VueIcon        string `json:"vueIcon"`        // vue的图标
	VueRedirect    string `json:"vueRedirect"`    // vue的路由重定向
	BackgroundUrl  string `json:"backgroundUrl"`  // 后台地址
}

type ListMenuResp struct {
	Code    string          `json:"code"`
	Message string          `json:"message"`
	Total   int64           `json:"total"`
	Data    []*ListMenuData `json:"data"`
}

type UpdateMenuReq struct {
	Id            int64  `json:"id"`                     // 编号
	Name          string `json:"name"`                   // 菜单名称
	ParentId      int64  `json:"parentId,default=0"`     // 父菜单ID，一级菜单为0
	Url           string `json:"url,optional"`           // 菜单URL,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
	Perms         string `json:"perms,optional"`         // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
	Type          int64  `json:"type,optional"`          // 类型   0：目录   1：菜单   2：按钮
	Icon          string `json:"icon,optional"`          // 菜单图标
	OrderNum      int64  `json:"orderNum,optional"`      // 排序
	VuePath       string `json:"vuePath,optional"`       // vue系统的path
	VueComponent  string `json:"vueComponent,optional"`  // vue的页面
	VueIcon       string `json:"vueIcon,optional"`       // vue的图标
	VueRedirect   string `json:"vueRedirect,optional"`   // vue的路由重定向
	BackgroundUrl string `json:"backgroundUrl,optional"` // 后台地址
}

type UpdateMenuResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteMenuReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteMenuResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddRoleReq struct {
	Name   string `json:"name"`
	Remark string `json:"remark,optional"`
}

type AddRoleResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type UpdateRoleReq struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Remark string `json:"remark"`
}

type UpdateRoleResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteRoleReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteRoleResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListRoleReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Name     string `json:"name,optional "`
}

type ListRoleData struct {
	Id             int64  `json:"id"`             // 编号
	Name           string `json:"name"`           // 角色名称
	Remark         string `json:"remark"`         // 备注
	CreateBy       string `json:"createBy"`       // 创建人
	CreateTime     string `json:"createTime"`     // 创建时间
	LastUpdateBy   string `json:"lastUpdateBy"`   // 更新人
	LastUpdateTime string `json:"lastUpdateTime"` // 更新时间
}

type ListRoleResp struct {
	Code     string          `json:"code"`
	Message  string          `json:"message"`
	Total    int64           `json:"total"`
	Data     []*ListRoleData `json:"data"`
	PageNum  int64           `json:"pageNum,default=1"`
	PageSize int64           `json:"pageSize,default=20"`
}

type RoleMenuReq struct {
	Id int64 `json:"id,optional"`
}

type ListtMenuData struct {
	Key      string `json:"key"`      // 菜单名称
	Title    string `json:"title"`    // 菜单名称
	ParentId int64  `json:"parentId"` // 父菜单ID，一级菜单为0
	Id       int64  `json:"id"`       // 父菜单ID，一级菜单为0
	Label    string `json:"label"`    // 父菜单ID，一级菜单为0
}

type RoleMenuResp struct {
	RoleData []int64          `json:"roleData"`
	AllData  []*ListtMenuData `json:"allData"`
	Code     string           `json:"code"`
	Message  string           `json:"message"`
}

type UpdateRoleMenuReq struct {
	RoleId  int64   `json:"roleId"`
	MenuIds []int64 `json:"menuIds"`
}

type UpdateRoleMenuResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListLoginLogReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Username string `json:"username,optional"`
	Ip       string `json:"ip,optional"` // IP地址
}

type ListLoginLogData struct {
	Id         int64  `json:"id"`         // 编号
	Username   string `json:"username"`   // 用户名
	Status     string `json:"status"`     // 登录状态（online:在线，登录初始状态，方便统计在线人数；login:退出登录后将online置为login；logout:退出登录）
	Ip         string `json:"ip"`         // IP地址
	CreateTime string `json:"createTime"` // 创建时间
	Avatar     string `json:"avatar"`
}

type ListLoginLogResp struct {
	Code     string              `json:"code"`
	Message  string              `json:"message"`
	Total    int64               `json:"total"`
	Data     []*ListLoginLogData `json:"data"`
	PageNum  int64               `json:"pageNum,default=1"`
	PageSize int64               `json:"pageSize,default=20"`
}

type DeleteLoginLogReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteLoginLogResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListSysLogReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Username string `json:"username,optional"` // 用户名
	Method   string `json:"method,optional"`   // 请求方法
}

type ListSysLogData struct {
	Id        int64  `json:"id"`        // 编号
	Username  string `json:"username"`  // 用户名
	Operation string `json:"operation"` // 用户操作
	Method    string `json:"method"`    // 请求方法
	Params    string `json:"params"`    // 请求参数
	Time      int64  `json:"time"`      // 执行时长(毫秒)
	Ip        string `json:"ip"`        // IP地址
	Avatar    string `json:"avatar"`
}

type ListSysLogResp struct {
	Code     string            `json:"code"`
	Message  string            `json:"message"`
	PageNum  int64             `json:"pageNum,default=1"`
	Data     []*ListSysLogData `json:"data"`
	PageSize int64             `json:"pageSize,default=20"`
	Success  bool              `json:"success"`
	Total    int64             `json:"total"`
}

type DeleteSysLogReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteSysLogResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddPlaceReq struct {
	Name      string `json:"name"`
	Place     string `json:"place"`
	Status    string `json:"status"`
	Pic       string `json:"pic"`
	Phone     string `json:"phone"`
	Principal string `json:"principal"`
}

type AddPlaceResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type UpdatePlaceReq struct {
	Id        int64  `json:"id"`
	Name      string `json:"name"`
	Place     string `json:"place"`
	Status    string `json:"status"`
	Pic       string `json:"pic"`
	Phone     string `json:"phone"`
	Principal string `json:"principal"`
}

type UpdatePlaceResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeletePlaceReq struct {
	Ids []int64 `json:"ids"`
}

type DeletePlaceResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListPlaceReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Name     string `json:"name,optional "`
	Place    string `json:"place,optional"`
	Phone    string `json:"phone,optional"`
}

type ListPlaceData struct {
	Id        int64  `json:"id"`
	Name      string `json:"name"`
	Place     string `json:"place"`
	Status    string `json:"status"`
	Pic       string `json:"pic"`
	Phone     string `json:"phone"`
	Principal string `json:"principal"`
}

type ListPlaceResp struct {
	Code     string           `json:"code"`
	Message  string           `json:"message"`
	Total    int64            `json:"total"`
	Data     []*ListPlaceData `json:"data"`
	PageNum  int64            `json:"pageNum,default=1"`
	PageSize int64            `json:"pageSize,default=20"`
}
