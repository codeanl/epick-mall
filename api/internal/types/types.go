// Code generated by goctl. DO NOT EDIT.
package types

type LoginReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResp struct {
	Code             string `json:"code"`
	Message          string `json:"message"`
	ID               int64  `json:"id"`
	Username         string `json:"username"`
	Phone            string `json:"phone"`
	Nickname         string `json:"nickname"`
	Gender           string `json:"gender"`
	Avatar           string `json:"avatar"`
	Email            string `json:"email"`
	Status           string `json:"status"`
	CurrentAuthority string `json:"currentAuthority"`
	AccessToken      string `json:"accessToken"`
	AccessExpire     int64  `json:"accessExpire"`
	RefreshAfter     int64  `json:"refreshAfter"`
}

type AddUserReq struct {
	Phone    string `json:"phone"`
	Nickname string `json:"nickname"`
	Gender   string `json:"gender"`
	Avatar   string `json:"avatar"`
	Email    string `json:"email"`
	Status   string `json:"status"`
	RoleID   int64  `json:"role_id,optional"`
}

type AddUserResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type UpdateUserReq struct {
	ID       int64  `json:"id"`
	Username string `json:"username"`
	Phone    string `json:"phone"`
	Nickname string `json:"nickname"`
	Gender   string `json:"gender"`
	Status   string `json:"status"`
	Email    string `json:"email"`
	RoleID   int64  `json:"role_id,optional"`
}

type UpdateUserResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteUserReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteUserResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListUserReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Nickname string `json:"nickname,optional"`
	Phone    string `json:"phone,optional"`
	Email    string `json:"email,optional"`
	Status   string `json:"status,optional"`
	Gander   string `json:"gender,optional"`
}

type User struct {
	ID         int64  `json:"id"`
	Username   string `json:"username"`
	NickName   string `json:"nickname"`
	Phone      string `json:"phone"`
	Gander     string `json:"gender"`
	Avatar     string `json:"avatar"`
	Email      string `json:"email"`
	Status     string `json:"status"`
	CreateTime string `json:"creat_time"`
	UpdateTime string `json:"update_time"`
	RoleID     int64  `json:"role_id"`
	RoleName   string `json:"role_name"`
}

type ListUserResp struct {
	Code     string  `json:"code"`
	Message  string  `json:"message"`
	Data     []*User `json:"data"`
	PageNum  int64   `json:"current,default=1"`
	PageSize int64   `json:"pageSize,default=20"`
	Total    int64   `json:"total"`
}

type ResetPasswordReq struct {
	ID int64 `json:"id"`
}

type ResetPasswordResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type UserInfoResp struct {
	Code        string             `json:"code"`
	Message     string             `json:"message"`
	Avatar      string             `json:"avatar"`
	Name        string             `json:"name"`
	MenuTree    []*ListMenuTree    `json:"menuTree"`
	MenuTreeVue []*ListMenuTreeVue `json:"menuTreeVue"`
}

type ListMenuTree struct {
	Id       int64  `json:"id"`       // 编号
	Path     string `json:"path"`     // 菜单路径
	Name     string `json:"name"`     // 菜单名称
	ParentId int64  `json:"parentId"` // 父菜单ID，一级菜单为0
	Icon     string `json:"icon"`     // 菜单图标
}

type ListMenuTreeVue struct {
	Id           int64        `json:"id"`
	ParentId     int64        `json:"parentId"`
	Title        string       `json:"title"`
	Path         string       `json:"path"`
	Name         string       `json:"name"`
	Icon         string       `json:"icon"`
	VueRedirect  string       `json:"redirect"`
	VueComponent string       `json:"component"`
	Meta         MenuTreeMeta `json:"meta"`
}

type MenuTreeMeta struct {
	Title string `json:"title"`
	Icon  string `json:"icon"`
}

type SelectDataReq struct {
	PageNum  int64 `json:"pageNum,default=1"`
	PageSize int64 `json:"pageSize,default=20"`
}

type SelectDataResp struct {
	Code    string         `json:"code"`
	Message string         `json:"message"`
	RoleAll []*RoleAllResp `json:"roleAll"`
}

type RoleAllResp struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Remark string `json:"remark"`
}

type AddMenuReq struct {
	Name          string `json:"name"`                   // 菜单名称
	ParentId      int64  `json:"parentId,optional"`      // 父菜单ID，一级菜单为0
	Url           string `json:"url,optional"`           // 菜单URL,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
	Perms         string `json:"perms,optional"`         // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
	Type          int64  `json:"type,optional"`          // 类型   0：目录   1：菜单   2：按钮
	Icon          string `json:"icon,optional"`          // 菜单图标
	OrderNum      int64  `json:"orderNum,optional"`      // 排序
	VuePath       string `json:"vuePath,optional"`       // vue系统的path
	VueComponent  string `json:"vueComponent,optional"`  // vue的页面
	VueIcon       string `json:"vueIcon,optional"`       // vue的图标
	VueRedirect   string `json:"vueRedirect,optional"`   // vue的路由重定向
	BackgroundUrl string `json:"backgroundUrl,optional"` // 后台地址
}

type AddMenuResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListMenuReq struct {
	Name string `json:"name,optional"`
	Url  string `json:"url,optional "`
}

type ListMenuData struct {
	Id             int64  `json:"id"`             // 编号
	Name           string `json:"name"`           // 菜单名称
	ParentId       int64  `json:"parentId"`       // 父菜单ID，一级菜单为0
	Url            string `json:"url"`            // 菜单URL,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
	Perms          string `json:"perms"`          // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
	Type           int64  `json:"type"`           // 类型   0：目录   1：菜单   2：按钮
	Icon           string `json:"icon"`           // 菜单图标
	OrderNum       int64  `json:"orderNum"`       // 排序
	CreateBy       string `json:"createBy"`       // 创建人
	CreateTime     string `json:"createTime"`     // 创建时间
	LastUpdateBy   string `json:"lastUpdateBy"`   // 更新人
	LastUpdateTime string `json:"lastUpdateTime"` // 更新时间
	VuePath        string `json:"vuePath"`        // vue系统的path
	VueComponent   string `json:"vueComponent"`   // vue的页面
	VueIcon        string `json:"vueIcon"`        // vue的图标
	VueRedirect    string `json:"vueRedirect"`    // vue的路由重定向
	BackgroundUrl  string `json:"backgroundUrl"`  // 后台地址
}

type ListMenuResp struct {
	Code    string          `json:"code"`
	Message string          `json:"message"`
	Total   int64           `json:"total"`
	Data    []*ListMenuData `json:"data"`
}

type UpdateMenuReq struct {
	Id            int64  `json:"id"`                     // 编号
	Name          string `json:"name"`                   // 菜单名称
	ParentId      int64  `json:"parentId,default=0"`     // 父菜单ID，一级菜单为0
	Url           string `json:"url,optional"`           // 菜单URL,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
	Perms         string `json:"perms,optional"`         // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
	Type          int64  `json:"type,optional"`          // 类型   0：目录   1：菜单   2：按钮
	Icon          string `json:"icon,optional"`          // 菜单图标
	OrderNum      int64  `json:"orderNum,optional"`      // 排序
	VuePath       string `json:"vuePath,optional"`       // vue系统的path
	VueComponent  string `json:"vueComponent,optional"`  // vue的页面
	VueIcon       string `json:"vueIcon,optional"`       // vue的图标
	VueRedirect   string `json:"vueRedirect,optional"`   // vue的路由重定向
	BackgroundUrl string `json:"backgroundUrl,optional"` // 后台地址
}

type UpdateMenuResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteMenuReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteMenuResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddRoleReq struct {
	Name   string `json:"name"`
	Remark string `json:"remark,optional"`
}

type AddRoleResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type UpdateRoleReq struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Remark string `json:"remark"`
}

type UpdateRoleResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteRoleReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteRoleResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListRoleReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Name     string `json:"name,optional "`
}

type ListRoleData struct {
	Id             int64  `json:"id"`             // 编号
	Name           string `json:"name"`           // 角色名称
	Remark         string `json:"remark"`         // 备注
	CreateBy       string `json:"createBy"`       // 创建人
	CreateTime     string `json:"createTime"`     // 创建时间
	LastUpdateBy   string `json:"lastUpdateBy"`   // 更新人
	LastUpdateTime string `json:"lastUpdateTime"` // 更新时间
}

type ListRoleResp struct {
	Code     string          `json:"code"`
	Message  string          `json:"message"`
	Total    int64           `json:"total"`
	Data     []*ListRoleData `json:"data"`
	PageNum  int64           `json:"pageNum,default=1"`
	PageSize int64           `json:"pageSize,default=20"`
}

type RoleMenuReq struct {
	Id int64 `json:"id,optional"`
}

type ListtMenuData struct {
	Key      string `json:"key"`      // 菜单名称
	Title    string `json:"title"`    // 菜单名称
	ParentId int64  `json:"parentId"` // 父菜单ID，一级菜单为0
	Id       int64  `json:"id"`       // 父菜单ID，一级菜单为0
	Label    string `json:"label"`    // 父菜单ID，一级菜单为0
}

type RoleMenuResp struct {
	RoleData []int64          `json:"roleData"`
	AllData  []*ListtMenuData `json:"allData"`
	Code     string           `json:"code"`
	Message  string           `json:"message"`
}

type UpdateRoleMenuReq struct {
	RoleId  int64   `json:"roleId"`
	MenuIds []int64 `json:"menuIds"`
}

type UpdateRoleMenuResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListLoginLogReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Username string `json:"username,optional"`
	Ip       string `json:"ip,optional"` // IP地址
}

type ListLoginLogData struct {
	Id         int64  `json:"id"`         // 编号
	Username   string `json:"username"`   // 用户名
	Status     string `json:"status"`     // 登录状态（online:在线，登录初始状态，方便统计在线人数；login:退出登录后将online置为login；logout:退出登录）
	Ip         string `json:"ip"`         // IP地址
	CreateTime string `json:"createTime"` // 创建时间
	Avatar     string `json:"avatar"`
}

type ListLoginLogResp struct {
	Code     string              `json:"code"`
	Message  string              `json:"message"`
	Total    int64               `json:"total"`
	Data     []*ListLoginLogData `json:"data"`
	PageNum  int64               `json:"pageNum,default=1"`
	PageSize int64               `json:"pageSize,default=20"`
}

type DeleteLoginLogReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteLoginLogResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListSysLogReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Username string `json:"username,optional"` // 用户名
	Method   string `json:"method,optional"`   // 请求方法
}

type ListSysLogData struct {
	Id        int64  `json:"id"`        // 编号
	Username  string `json:"username"`  // 用户名
	Operation string `json:"operation"` // 用户操作
	Method    string `json:"method"`    // 请求方法
	Params    string `json:"params"`    // 请求参数
	Time      int64  `json:"time"`      // 执行时长(毫秒)
	Ip        string `json:"ip"`        // IP地址
	Avatar    string `json:"avatar"`
}

type ListSysLogResp struct {
	Code     string            `json:"code"`
	Message  string            `json:"message"`
	PageNum  int64             `json:"pageNum,default=1"`
	Data     []*ListSysLogData `json:"data"`
	PageSize int64             `json:"pageSize,default=20"`
	Success  bool              `json:"success"`
	Total    int64             `json:"total"`
}

type DeleteSysLogReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteSysLogResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddPlaceReq struct {
	Name      string `json:"name"`
	Place     string `json:"place"`
	Status    string `json:"status"`
	Pic       string `json:"pic"`
	Phone     string `json:"phone"`
	Principal string `json:"principal"`
}

type AddPlaceResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type UpdatePlaceReq struct {
	Id        int64  `json:"id"`
	Name      string `json:"name"`
	Place     string `json:"place"`
	Status    string `json:"status"`
	Pic       string `json:"pic"`
	Phone     string `json:"phone"`
	Principal string `json:"principal"`
}

type UpdatePlaceResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeletePlaceReq struct {
	Ids []int64 `json:"ids"`
}

type DeletePlaceResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListPlaceReq struct {
	PageNum  int64  `json:"pageNum,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Name     string `json:"name,optional "`
	Place    string `json:"place,optional"`
	Phone    string `json:"phone,optional"`
}

type ListPlaceData struct {
	Id        int64  `json:"id"`
	Name      string `json:"name"`
	Place     string `json:"place"`
	Status    string `json:"status"`
	Pic       string `json:"pic"`
	Phone     string `json:"phone"`
	Principal string `json:"principal"`
}

type ListPlaceResp struct {
	Code     string           `json:"code"`
	Message  string           `json:"message"`
	Total    int64            `json:"total"`
	Data     []*ListPlaceData `json:"data"`
	PageNum  int64            `json:"pageNum,default=1"`
	PageSize int64            `json:"pageSize,default=20"`
}

type AddCouponReq struct {
	Type         string  `json:"type"` // 优惠券类型；0->全场赠券；1->会员赠券；2->购物赠券；3->注册赠券
	Name         string  `json:"name"`
	Platform     string  `json:"platform"` // 使用平台：0->全部；1->移动；2->PC
	Count        int64   `json:"count"`    // 数量
	Amount       float64 `json:"amount"`   // 金额
	PerLimit     int64   `json:"perLimit"` // 每人限领张数
	MinPoint     float64 `json:"minPoint"` // 使用门槛；0表示无门槛
	StartTime    string  `json:"startTime"`
	EndTime      string  `json:"endTime"`
	UseType      string  `json:"useType"`      // 使用类型：0->全场通用；1->指定分类；2->指定商品
	Note         string  `json:"note"`         // 备注
	PublishCount int64   `json:"publishCount"` // 发行数量
	EnableTime   string  `json:"enableTime"`   // 可以领取的日期
	Code         string  `json:"code"`         // 优惠码
}

type AddCouponResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListCouponReq struct {
	Current   int64  `json:"current,default=1"`
	PageSize  int64  `json:"pageSize,default=20"`
	Type      string `json:"type,default=4"` // 优惠券类型；0->全场赠券；1->会员赠券；2->购物赠券；3->注册赠券
	Name      string `json:"name,optional"`
	Platform  string `json:"platform,default=3"` // 使用平台：0->全部；1->移动；2->PC
	StartTime string `json:"startTime,optional"`
	EndTime   string `json:"endTime,optional"`
	UseType   string `json:"useType,default=3"` // 使用类型：0->全场通用；1->指定分类；2->指定商品
}

type ListCouponData struct {
	Id           int64   `json:"id"`
	Type         string  `json:"type"` // 优惠券类型；0->全场赠券；1->会员赠券；2->购物赠券；3->注册赠券
	Name         string  `json:"name"`
	Platform     string  `json:"platform"` // 使用平台：0->全部；1->移动；2->PC
	Count        int64   `json:"count"`    // 数量
	Amount       float64 `json:"amount"`   // 金额
	PerLimit     int64   `json:"perLimit"` // 每人限领张数
	MinPoint     float64 `json:"minPoint"` // 使用门槛；0表示无门槛
	StartTime    string  `json:"startTime"`
	EndTime      string  `json:"endTime"`
	UseType      string  `json:"useType"`      // 使用类型：0->全场通用；1->指定分类；2->指定商品
	Note         string  `json:"note"`         // 备注
	PublishCount int64   `json:"publishCount"` // 发行数量
	UseCount     int64   `json:"useCount"`     // 已使用数量
	ReceiveCount int64   `json:"receiveCount"` // 领取数量
	EnableTime   string  `json:"enableTime"`   // 可以领取的日期
	Code         string  `json:"code"`         // 优惠码
}

type ListCouponResp struct {
	Code     string            `json:"code"`
	Message  string            `json:"message"`
	Current  int64             `json:"current,default=1"`
	Data     []*ListCouponData `json:"data"`
	PageSize int64             `json:"pageSize,default=20"`
	Total    int64             `json:"total"`
}

type UpdateCouponReq struct {
	Id           int64   `json:"id"`
	Type         string  `json:"type"` // 优惠券类型；0->全场赠券；1->会员赠券；2->购物赠券；3->注册赠券
	Name         string  `json:"name"`
	Platform     string  `json:"platform"` // 使用平台：0->全部；1->移动；2->PC
	Count        int64   `json:"count"`    // 数量
	Amount       float64 `json:"amount"`   // 金额
	PerLimit     int64   `json:"perLimit"` // 每人限领张数
	MinPoint     float64 `json:"minPoint"` // 使用门槛；0表示无门槛
	StartTime    string  `json:"startTime"`
	EndTime      string  `json:"endTime"`
	UseType      string  `json:"useType"`      // 使用类型：0->全场通用；1->指定分类；2->指定商品
	Note         string  `json:"note"`         // 备注
	PublishCount int64   `json:"publishCount"` // 发行数量
	EnableTime   string  `json:"enableTime"`   // 可以领取的日期
	Code         string  `json:"code"`         // 优惠码
}

type UpdateCouponResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteCouponReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteCouponResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddHomeAdvertiseReq struct {
	Name      string `json:"name"`          // 名称
	Type      string `json:"type"`          // 轮播位置：0->PC首页轮播；1->app首页轮播
	Pic       string `json:"pic,optional"`  // 图片地址
	StartTime string `json:"startTime"`     // 开始时间
	EndTime   string `json:"endTime"`       // 结束时间
	Status    string `json:"status"`        // 上下线状态：0->下线；1->上线
	Url       string `json:"url"`           // 链接地址
	Note      string `json:"note,optional"` // 备注
	Sort      int64  `json:"sort"`          // 排序
}

type AddHomeAdvertiseResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListHomeAdvertiseReq struct {
	Current   int64  `json:"current,default=1"`
	PageSize  int64  `json:"pageSize,default=20"`
	Name      string `json:"name,optional"`      // 名称
	Type      string `json:"type,default=2"`     // 轮播位置：0->PC首页轮播；1->app首页轮播
	StartTime string `json:"startTime,optional"` // 开始时间
	EndTime   string `json:"endTime,optional"`   // 结束时间
	Status    string `json:"status,default=2"`   // 上下线状态：0->下线；1->上线
}

type ListHomeAdvertiseData struct {
	Id         int64  `json:"id"`
	Name       string `json:"name"`       // 名称
	Type       string `json:"type"`       // 轮播位置：0->PC首页轮播；1->app首页轮播
	Pic        string `json:"pic"`        // 图片地址
	StartTime  string `json:"startTime"`  // 开始时间
	EndTime    string `json:"endTime"`    // 结束时间
	Status     string `json:"status"`     // 上下线状态：0->下线；1->上线
	ClickCount int64  `json:"clickCount"` // 点击数
	OrderCount int64  `json:"orderCount"` // 下单数
	Url        string `json:"url"`        // 链接地址
	Note       string `json:"note"`       // 备注
	Sort       int64  `json:"sort"`       // 排序
}

type ListHomeAdvertiseResp struct {
	Code     string                   `json:"code"`
	Message  string                   `json:"message"`
	Current  int64                    `json:"current,default=1"`
	Data     []*ListHomeAdvertiseData `json:"data"`
	PageSize int64                    `json:"pageSize,default=20"`
	Total    int64                    `json:"total"`
}

type UpdateHomeAdvertiseReq struct {
	Id        int64  `json:"id"`
	Name      string `json:"name"`          // 名称
	Type      string `json:"type"`          // 轮播位置：0->PC首页轮播；1->app首页轮播
	Pic       string `json:"pic,optional"`  // 图片地址
	StartTime string `json:"startTime"`     // 开始时间
	EndTime   string `json:"endTime"`       // 结束时间
	Status    string `json:"status"`        // 上下线状态：0->下线；1->上线
	Url       string `json:"url"`           // 链接地址
	Note      string `json:"note,optional"` // 备注
	Sort      int64  `json:"sort"`          // 排序
}

type UpdateHomeAdvertiseResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteHomeAdvertiseReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteHomeAdvertiseResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddProductBrandReq struct {
	Name          string `json:"name"`
	FirstLetter   string `json:"firstLetter"` // 首字母
	Sort          int64  `json:"sort"`
	FactoryStatus string `json:"factoryStatus"` // 是否为品牌制造商：0->不是；1->是
	ShowStatus    string `json:"showStatus"`
	Logo          string `json:"logo"`       // 品牌logo
	BigPic        string `json:"bigPic"`     // 专区大图
	BrandStory    string `json:"brandStory"` // 品牌故事
}

type AddProductBrandResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListProductBrandReq struct {
	Current       int64  `json:"current,default=1"`
	PageSize      int64  `json:"pageSize,default=20"`
	Name          string `json:"name,optional"`
	FactoryStatus string `json:"factoryStatus,default=2"` // 是否为品牌制造商：0->不是；1->是
	ShowStatus    string `json:"showStatus,default=2"`
}

type ListProductBrandData struct {
	Id                  int64  `json:"id"`
	Name                string `json:"name"`
	FirstLetter         string `json:"firstLetter"` // 首字母
	Sort                int64  `json:"sort"`
	FactoryStatus       string `json:"factoryStatus"` // 是否为品牌制造商：0->不是；1->是
	ShowStatus          string `json:"showStatus"`
	ProductCount        int64  `json:"productCount"`        // 产品数量
	ProductCommentCount int64  `json:"productCommentCount"` // 产品评论数量
	Logo                string `json:"logo"`                // 品牌logo
	BigPic              string `json:"bigPic"`              // 专区大图
	BrandStory          string `json:"brandStory"`          // 品牌故事
}

type ListProductBrandResp struct {
	Current  int64                   `json:"current,default=1"`
	Data     []*ListProductBrandData `json:"data"`
	PageSize int64                   `json:"pageSize,default=20"`
	Total    int64                   `json:"total"`
	Code     string                  `json:"code"`
	Message  string                  `json:"message"`
}

type UpdateProductBrandReq struct {
	Id                  int64  `json:"id"`
	Name                string `json:"name"`
	FirstLetter         string `json:"firstLetter"` // 首字母
	Sort                int64  `json:"sort"`
	FactoryStatus       string `json:"factoryStatus"` // 是否为品牌制造商：0->不是；1->是
	ShowStatus          string `json:"showStatus"`
	ProductCount        int64  `json:"productCount"`        // 产品数量
	ProductCommentCount int64  `json:"productCommentCount"` // 产品评论数量
	Logo                string `json:"logo"`                // 品牌logo
	BigPic              string `json:"bigPic"`              // 专区大图
	BrandStory          string `json:"brandStory"`          // 品牌故事
}

type UpdateProductBrandResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteProductBrandReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteProductBrandResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddProductReq struct {
	BrandId                    int64   `json:"brandId"`
	ProductCategoryId          int64   `json:"productCategoryId"`
	FeightTemplateId           int64   `json:"feightTemplateId"`
	ProductAttributeCategoryId int64   `json:"productAttributeCategoryId"`
	Name                       string  `json:"name"`
	Pic                        string  `json:"pic"`
	ProductSn                  string  `json:"productSn"`       // 货号
	DeleteStatus               string  `json:"deleteStatus"`    // 删除状态：0->未删除；1->已删除
	PublishStatus              string  `json:"publishStatus"`   // 上架状态：0->下架；1->上架
	NewStatus                  int64   `string:"newStatus"`     // 新品状态:0->不是新品；1->新品
	RecommandStatus            string  `json:"recommandStatus"` // 推荐状态；0->不推荐；1->推荐
	Sort                       int64   `json:"sort"`            // 排序
	Sale                       int64   `json:"sale"`            // 销量
	Price                      float64 `json:"price"`
	PromotionPrice             float64 `json:"promotionPrice"` // 促销价格
	GiftGrowth                 int64   `json:"giftGrowth"`     // 赠送的成长值
	GiftPoint                  int64   `json:"giftPoint"`      // 赠送的积分
	UsePointLimit              int64   `json:"usePointLimit"`  // 限制使用的积分数
	SubTitle                   string  `json:"subTitle"`       // 副标题
	Description                string  `json:"description"`    // 商品描述
	OriginalPrice              float64 `json:"originalPrice"`  // 市场价
	Stock                      int64   `json:"stock"`          // 库存
	LowStock                   int64   `json:"lowStock"`       // 库存预警值
	Unit                       string  `json:"unit"`           // 单位
	Weight                     float64 `json:"weight"`         // 商品重量，默认为克
	PreviewStatus              string  `json:"previewStatus"`  // 是否为预告商品：0->不是；1->是
	ServiceIds                 string  `json:"serviceIds"`     // 以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮
	Keywords                   string  `json:"keywords"`
	Note                       string  `json:"note"`
	AlbumPics                  string  `json:"albumPics"` // 画册图片，连产品图片限制为5张，以逗号分割
	DetailTitle                string  `json:"detailTitle"`
	DetailDesc                 string  `json:"detailDesc"`
	DetailHtml                 string  `json:"detailHtml"`          // 产品详情网页内容
	DetailMobileHtml           string  `json:"detailMobileHtml"`    // 移动端网页详情
	PromotionStartTime         string  `json:"promotionStartTime"`  // 促销开始时间
	PromotionEndTime           string  `json:"promotionEndTime"`    // 促销结束时间
	PromotionPerLimit          int64   `json:"promotionPerLimit"`   // 活动限购数量
	PromotionType              int64   `json:"promotionType"`       // 促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购
	BrandName                  string  `json:"brandName"`           // 品牌名称
	ProductCategoryName        string  `json:"productCategoryName"` // 商品分类名称
}

type AddProductResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListProductReq struct {
	Current  int64 `json:"current,default=1"`
	PageSize int64 `json:"pageSize,default=20"`
}

type ListProductData struct {
	Id                         int64   `json:"id"`
	BrandId                    int64   `json:"brandId"`
	ProductCategoryId          int64   `json:"productCategoryId"`
	FeightTemplateId           int64   `json:"feightTemplateId"`
	ProductAttributeCategoryId int64   `json:"productAttributeCategoryId"`
	Name                       string  `json:"name"`
	Pic                        string  `json:"pic"`
	ProductSn                  string  `json:"productSn"`       // 货号
	DeleteStatus               string  `json:"deleteStatus"`    // 删除状态：0->未删除；1->已删除
	PublishStatus              string  `json:"publishStatus"`   // 上架状态：0->下架；1->上架
	NewStatus                  string  `json:"newStatus"`       // 新品状态:0->不是新品；1->新品
	RecommandStatus            string  `json:"recommandStatus"` // 推荐状态；0->不推荐；1->推荐
	Sort                       int64   `json:"sort"`            // 排序
	Sale                       int64   `json:"sale"`            // 销量
	Price                      float64 `json:"price"`
	PromotionPrice             float64 `json:"promotionPrice"` // 促销价格
	GiftGrowth                 int64   `json:"giftGrowth"`     // 赠送的成长值
	GiftPoint                  int64   `json:"giftPoint"`      // 赠送的积分
	UsePointLimit              int64   `json:"usePointLimit"`  // 限制使用的积分数
	SubTitle                   string  `json:"subTitle"`       // 副标题
	Description                string  `json:"description"`    // 商品描述
	OriginalPrice              float64 `json:"originalPrice"`  // 市场价
	Stock                      int64   `json:"stock"`          // 库存
	LowStock                   int64   `json:"lowStock"`       // 库存预警值
	Unit                       string  `json:"unit"`           // 单位
	Weight                     float64 `json:"weight"`         // 商品重量，默认为克
	PreviewStatus              string  `json:"previewStatus"`  // 是否为预告商品：0->不是；1->是
	ServiceIds                 string  `json:"serviceIds"`     // 以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮
	Keywords                   string  `json:"keywords"`
	Note                       string  `json:"note"`
	AlbumPics                  string  `json:"albumPics"` // 画册图片，连产品图片限制为5张，以逗号分割
	DetailTitle                string  `json:"detailTitle"`
	DetailDesc                 string  `json:"detailDesc"`
	DetailHtml                 string  `json:"detailHtml"`          // 产品详情网页内容
	DetailMobileHtml           string  `json:"detailMobileHtml"`    // 移动端网页详情
	PromotionStartTime         string  `json:"promotionStartTime"`  // 促销开始时间
	PromotionEndTime           string  `json:"promotionEndTime"`    // 促销结束时间
	PromotionPerLimit          int64   `json:"promotionPerLimit"`   // 活动限购数量
	PromotionType              string  `json:"promotionType"`       // 促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购
	BrandName                  string  `json:"brandName"`           // 品牌名称
	ProductCategoryName        string  `json:"productCategoryName"` // 商品分类名称
}

type ListProductResp struct {
	Code     string             `json:"code"`
	Message  string             `json:"message"`
	Current  int64              `json:"current,default=1"`
	Data     []*ListProductData `json:"data"`
	PageSize int64              `json:"pageSize,default=20"`
	Total    int64              `json:"total"`
}

type UpdateProductReq struct {
	Id                         int64   `json:"id"`
	BrandId                    int64   `json:"brandId"`
	ProductCategoryId          int64   `json:"productCategoryId"`
	FeightTemplateId           int64   `json:"feightTemplateId"`
	ProductAttributeCategoryId int64   `json:"productAttributeCategoryId"`
	Name                       string  `json:"name"`
	Pic                        string  `json:"pic"`
	ProductSn                  string  `json:"productSn"`       // 货号
	DeleteStatus               string  `json:"deleteStatus"`    // 删除状态：0->未删除；1->已删除
	PublishStatus              string  `json:"publishStatus"`   // 上架状态：0->下架；1->上架
	NewStatus                  int64   `string:"newStatus"`     // 新品状态:0->不是新品；1->新品
	RecommandStatus            string  `json:"recommandStatus"` // 推荐状态；0->不推荐；1->推荐
	Sort                       int64   `json:"sort"`            // 排序
	Sale                       int64   `json:"sale"`            // 销量
	Price                      float64 `json:"price"`
	PromotionPrice             float64 `json:"promotionPrice"` // 促销价格
	GiftGrowth                 int64   `json:"giftGrowth"`     // 赠送的成长值
	GiftPoint                  int64   `json:"giftPoint"`      // 赠送的积分
	UsePointLimit              int64   `json:"usePointLimit"`  // 限制使用的积分数
	SubTitle                   string  `json:"subTitle"`       // 副标题
	Description                string  `json:"description"`    // 商品描述
	OriginalPrice              float64 `json:"originalPrice"`  // 市场价
	Stock                      int64   `json:"stock"`          // 库存
	LowStock                   int64   `json:"lowStock"`       // 库存预警值
	Unit                       string  `json:"unit"`           // 单位
	Weight                     float64 `json:"weight"`         // 商品重量，默认为克
	PreviewStatus              string  `json:"previewStatus"`  // 是否为预告商品：0->不是；1->是
	ServiceIds                 string  `json:"serviceIds"`     // 以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮
	Keywords                   string  `json:"keywords"`
	Note                       string  `json:"note"`
	AlbumPics                  string  `json:"albumPics"` // 画册图片，连产品图片限制为5张，以逗号分割
	DetailTitle                string  `json:"detailTitle"`
	DetailDesc                 string  `json:"detailDesc"`
	DetailHtml                 string  `json:"detailHtml"`          // 产品详情网页内容
	DetailMobileHtml           string  `json:"detailMobileHtml"`    // 移动端网页详情
	PromotionStartTime         string  `json:"promotionStartTime"`  // 促销开始时间
	PromotionEndTime           string  `json:"promotionEndTime"`    // 促销结束时间
	PromotionPerLimit          int64   `json:"promotionPerLimit"`   // 活动限购数量
	PromotionType              string  `json:"promotionType"`       // 促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购
	BrandName                  string  `json:"brandName"`           // 品牌名称
	ProductCategoryName        string  `json:"productCategoryName"` // 商品分类名称
}

type UpdateProductResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteProductReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteProductResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddProductCategoryReq struct {
	ParentId    int64  `json:"parentId"` // 上级分类的编号：0表示一级分类
	Name        string `json:"name"`
	Level       string `json:"level"`      // 分类级别：0->1级；1->2级
	NavStatus   string `json:"navStatus"`  // 是否显示在导航栏：0->不显示；1->显示
	ShowStatus  string `json:"showStatus"` // 显示状态：0->不显示；1->显示
	ProductUnit string `json:"productUnit"`
	Sort        int64  `json:"sort"`
	Icon        string `json:"icon"` // 图标
	Keywords    string `json:"keywords,optional"`
	Description string `json:"description,optional"` // 描述
}

type AddProductCategoryResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListProductCategoryReq struct {
	Current  int64  `json:"current,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Name     string `json:"name,optional"`
	ParentId int64  `json:"parentId,default=2"` // 上级分类的编号：0表示一级分类
}

type ListtProductCategoryData struct {
	Id           int64  `json:"id"`
	ParentId     int64  `json:"parentId"` // 上级分类的编号：0表示一级分类
	Name         string `json:"name"`
	Level        string `json:"level"` // 分类级别：0->1级；1->2级
	ProductCount int64  `json:"productCount"`
	ProductUnit  string `json:"productUnit"`
	NavStatus    string `json:"navStatus"`  // 是否显示在导航栏：0->不显示；1->显示
	ShowStatus   string `json:"showStatus"` // 显示状态：0->不显示；1->显示
	Sort         int64  `json:"sort"`
	Icon         string `json:"icon"` // 图标
	Keywords     string `json:"keywords"`
	Description  string `json:"description"` // 描述
}

type ListProductCategoryResp struct {
	Code     string                      `json:"code"`
	Message  string                      `json:"message"`
	Current  int64                       `json:"current,default=1"`
	Data     []*ListtProductCategoryData `json:"data"`
	PageSize int64                       `json:"pageSize,default=20"`
	Total    int64                       `json:"total"`
}

type UpdateProductCategoryReq struct {
	Id           int64  `json:"id"`
	ParentId     int64  `json:"parentId"` // 上级分类的编号：0表示一级分类
	Name         string `json:"name"`
	Level        string `json:"level"` // 分类级别：0->1级；1->2级
	ProductCount int64  `json:"productCount"`
	ProductUnit  string `json:"productUnit"`
	NavStatus    string `json:"navStatus"`  // 是否显示在导航栏：0->不显示；1->显示
	ShowStatus   string `json:"showStatus"` // 显示状态：0->不显示；1->显示
	Sort         int64  `json:"sort"`
	Icon         string `json:"icon"` // 图标
	Keywords     string `json:"keywords"`
	Description  string `json:"description"` // 描述
}

type UpdateProductCategoryResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteProductCategoryReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteProductCategoryResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddProductAttributeReq struct {
	ProductAttributeCategoryId int64  `json:"productAttributeCategoryId"` // 属性分类id
	Name                       string `json:"name"`
	SelectType                 string `json:"selectType"`         // 属性选择类型：0->唯一；1->单选；2->多选
	InputType                  string `json:"inputType"`          // 属性录入方式：0->手工录入；1->从列表中选取
	InputList                  string `json:"inputList,optional"` // 可选值列表，以逗号隔开
	Sort                       int64  `json:"sort"`               // 排序字段：最高的可以单独上传图片
	FilterType                 string `json:"filterType"`         // 分类筛选样式：1->普通；1->颜色
	SearchType                 string `json:"searchType"`         // 检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
	RelatedStatus              string `json:"relatedStatus"`      // 相同属性产品是否关联；0->不关联；1->关联
	HandAddStatus              string `json:"handAddStatus"`      // 是否支持手动新增；0->不支持；1->支持
	Type                       string `json:"type"`               // 属性的类型；0->规格；1->参数
}

type AddProductAttributeResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListProductAttributeReq struct {
	Current                    int64  `json:"current,default=1"`
	PageSize                   int64  `json:"pageSize,default=20"`
	Name                       string `json:"name,optional"`
	Type                       string `json:"type,default=2"` // 属性的类型；0->规格；1->参数
	ProductAttributeCategoryId int64  `json:"productAttributeCategoryId,default=0"`
}

type ListProductAttributeData struct {
	Id                         int64  `json:"id"`
	ProductAttributeCategoryId int64  `json:"productAttributeCategoryId"`
	Name                       string `json:"name"`
	SelectType                 string `json:"selectType"`    // 属性选择类型：0->唯一；1->单选；2->多选
	InputType                  string `json:"inputType"`     // 属性录入方式：0->手工录入；1->从列表中选取
	InputList                  string `json:"inputList"`     // 可选值列表，以逗号隔开
	Sort                       int64  `json:"sort"`          // 排序字段：最高的可以单独上传图片
	FilterType                 string `json:"filterType"`    // 分类筛选样式：1->普通；1->颜色
	SearchType                 string `json:"searchType"`    // 检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
	RelatedStatus              string `json:"relatedStatus"` // 相同属性产品是否关联；0->不关联；1->关联
	HandAddStatus              string `json:"handAddStatus"` // 是否支持手动新增；0->不支持；1->支持
	Type                       string `json:"type"`          // 属性的类型；0->规格；1->参数
}

type ListProductAttributeResp struct {
	Code     string                      `json:"code"`
	Message  string                      `json:"message"`
	Current  int64                       `json:"current,default=1"`
	Data     []*ListProductAttributeData `json:"data"`
	PageSize int64                       `json:"pageSize,default=20"`
	Total    int64                       `json:"total"`
}

type UpdateProductAttributeReq struct {
	Id                         int64  `json:"id"`
	ProductAttributeCategoryId int64  `json:"productAttributeCategoryId"`
	Name                       string `json:"name"`
	SelectType                 string `json:"selectType"`         // 属性选择类型：0->唯一；1->单选；2->多选
	InputType                  string `json:"inputType"`          // 属性录入方式：0->手工录入；1->从列表中选取
	InputList                  string `json:"inputList,optional"` // 可选值列表，以逗号隔开
	Sort                       int64  `json:"sort"`               // 排序字段：最高的可以单独上传图片
	FilterType                 string `json:"filterType"`         // 分类筛选样式：1->普通；1->颜色
	SearchType                 string `json:"searchType"`         // 检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
	RelatedStatus              string `json:"relatedStatus"`      // 相同属性产品是否关联；0->不关联；1->关联
	HandAddStatus              string `json:"handAddStatus"`      // 是否支持手动新增；0->不支持；1->支持
	Type                       string `json:"type"`               // 属性的类型；0->规格；1->参数
}

type UpdateProductAttributeResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteProductAttributeReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteProductAttributeResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddProductAttributecategoryReq struct {
	Name string `json:"name"`
}

type AddProductAttributecategoryResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListProductAttributecategoryReq struct {
	Current  int64  `json:"current,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Name     string `json:"name,optional"`
}

type ListtProductAttributecategoryData struct {
	Id                     int64  `json:"id"`
	Name                   string `json:"name"`
	AttributecategoryCount int64  `json:"attributeCount"` // 属性数量
	ParamCount             int64  `json:"paramCount"`     // 参数数量
}

type ListProductAttributecategoryResp struct {
	Code     string                               `json:"code"`
	Message  string                               `json:"message"`
	Current  int64                                `json:"current,default=1"`
	Data     []*ListtProductAttributecategoryData `json:"data"`
	PageSize int64                                `json:"pageSize,default=20"`
	Total    int64                                `json:"total"`
}

type UpdateProductAttributecategoryReq struct {
	Id                     int64  `json:"id"`
	Name                   string `json:"name"`
	AttributecategoryCount int64  `json:"attributeCount"` // 属性数量
	ParamCount             int64  `json:"paramCount"`     // 参数数量
}

type UpdateProductAttributecategoryResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteProductAttributecategoryReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteProductAttributecategoryResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddOrderReq struct {
	MemberId              int64   `json:"memberId"`
	PlaceId               int64   `json:"PlaceId"`
	CouponId              int64   `json:"couponId"`
	OrderSn               string  `json:"orderSn"`               // 订单编号
	CreateTime            string  `json:"createTime"`            // 提交时间
	MemberUsername        string  `json:"memberUserName"`        // 用户帐号
	TotalAmount           float64 `json:"totalAmount"`           // 订单总金额
	PayAmount             float64 `json:"payAmount"`             // 应付金额（实际支付金额）
	FreightAmount         float64 `json:"freightAmount"`         // 运费金额
	PromotionAmount       float64 `json:"promotionAmount"`       // 促销优化金额（促销价、满减、阶梯价）
	IntegrationAmount     float64 `json:"integrationAmount"`     // 积分抵扣金额
	CouponAmount          float64 `json:"couponAmount"`          // 优惠券抵扣金额
	DiscountAmount        float64 `json:"discountAmount"`        // 管理员后台调整订单使用的折扣金额
	PayType               string  `json:"payType"`               // 支付方式：0->未支付；1->支付宝；2->微信
	SourceType            string  `json:"sourceType"`            // 订单来源：0->PC订单；1->app订单
	Status                string  `json:"status"`                // 订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	OrderType             string  `json:"orderType"`             // 订单类型：0->正常订单；1->秒杀订单
	DeliveryCompany       string  `json:"deliveryCompany"`       // 物流公司(配送方式)
	DeliverySn            string  `json:"deliverySn"`            // 物流单号
	AutoConfirmDay        int64   `json:"autoConfirmDay"`        // 自动确认时间（天）
	Integration           int64   `json:"integration"`           // 可以获得的积分
	Growth                int64   `json:"growth"`                // 可以活动的成长值
	PromotionInfo         string  `json:"promotionInfo"`         // 活动信息
	BillType              string  `json:"billType"`              // 发票类型：0->不开发票；1->电子发票；2->纸质发票
	BillHeader            string  `json:"billHeader"`            // 发票抬头
	BillContent           string  `json:"billContent"`           // 发票内容
	BillReceiverPhone     string  `json:"billReceiverPhone"`     // 收票人电话
	BillReceiverEmail     string  `json:"billReceiverEmail"`     // 收票人邮箱
	ReceiverName          string  `json:"receiverName"`          // 收货人姓名
	ReceiverPhone         string  `json:"receiverPhone"`         // 收货人电话
	ReceiverPostCode      string  `json:"receiverPostCode"`      // 收货人邮编
	ReceiverProvince      string  `json:"receiverProvince"`      // 省份/直辖市
	ReceiverCity          string  `json:"receiverCity"`          // 城市
	ReceiverRegion        string  `json:"receiverRegion"`        // 区
	ReceiverDetailAddress string  `json:"receiverDetailAddress"` // 详细地址
	Note                  string  `json:"note"`                  // 订单备注
	ConfirmStatus         string  `json:"confirmStatus"`         // 确认收货状态：0->未确认；1->已确认
	DeleteStatus          string  `json:"deleteStatus"`          // 删除状态：0->未删除；1->已删除
	UseIntegration        int64   `json:"useIntegration"`        // 下单时使用的积分
}

type AddOrderResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListOrderReq struct {
	Current        int64  `json:"current,default=1"`
	PageSize       int64  `json:"pageSize,default=20"`
	OrderSn        string `json:"orderSn,optional"`        // 订单编号
	MemberUsername string `json:"memberUserName,optional"` // 用户帐号
	PayType        int64  `json:"payType,default=3"`       // 支付方式：0->未支付；1->支付宝；2->微信
	SourceType     int64  `json:"sourceType,default=2"`    // 订单来源：0->PC订单；1->app订单
	Status         int64  `json:"status,default=6"`        // 订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	OrderType      int64  `json:"orderType,default=2"`     // 订单类型：0->正常订单；1->秒杀订单
}

type ListOrderData struct {
	Id                    int64   `json:"id"` // 订单id
	MemberId              int64   `json:"memberId"`
	PlaceId               int64   `json:"PlaceId"`
	CouponId              int64   `json:"couponId"`
	OrderSn               string  `json:"orderSn"`               // 订单编号
	CreateTime            string  `json:"createTime"`            // 提交时间
	MemberUsername        string  `json:"memberUserName"`        // 用户帐号
	TotalAmount           float64 `json:"totalAmount"`           // 订单总金额
	PayAmount             float64 `json:"payAmount"`             // 应付金额（实际支付金额）
	FreightAmount         float64 `json:"freightAmount"`         // 运费金额
	PromotionAmount       float64 `json:"promotionAmount"`       // 促销优化金额（促销价、满减、阶梯价）
	IntegrationAmount     float64 `json:"integrationAmount"`     // 积分抵扣金额
	CouponAmount          float64 `json:"couponAmount"`          // 优惠券抵扣金额
	DiscountAmount        float64 `json:"discountAmount"`        // 管理员后台调整订单使用的折扣金额
	PayType               string  `json:"payType"`               // 支付方式：0->未支付；1->支付宝；2->微信
	SourceType            string  `json:"sourceType"`            // 订单来源：0->PC订单；1->app订单
	Status                string  `json:"status"`                // 订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	OrderType             string  `json:"orderType"`             // 订单类型：0->正常订单；1->秒杀订单
	DeliveryCompany       string  `json:"deliveryCompany"`       // 物流公司(配送方式)
	DeliverySn            string  `json:"deliverySn"`            // 物流单号
	AutoConfirmDay        int64   `json:"autoConfirmDay"`        // 自动确认时间（天）
	Integration           int64   `json:"integration"`           // 可以获得的积分
	Growth                int64   `json:"growth"`                // 可以活动的成长值
	PromotionInfo         string  `json:"promotionInfo"`         // 活动信息
	BillType              string  `json:"billType"`              // 发票类型：0->不开发票；1->电子发票；2->纸质发票
	BillHeader            string  `json:"billHeader"`            // 发票抬头
	BillContent           string  `json:"billContent"`           // 发票内容
	BillReceiverPhone     string  `json:"billReceiverPhone"`     // 收票人电话
	BillReceiverEmail     string  `json:"billReceiverEmail"`     // 收票人邮箱
	ReceiverName          string  `json:"receiverName"`          // 收货人姓名
	ReceiverPhone         string  `json:"receiverPhone"`         // 收货人电话
	ReceiverPostCode      string  `json:"receiverPostCode"`      // 收货人邮编
	ReceiverProvince      string  `json:"receiverProvince"`      // 省份/直辖市
	ReceiverCity          string  `json:"receiverCity"`          // 城市
	ReceiverRegion        string  `json:"receiverRegion"`        // 区
	ReceiverDetailAddress string  `json:"receiverDetailAddress"` // 详细地址
	Note                  string  `json:"note"`                  // 订单备注
	ConfirmStatus         string  `json:"confirmStatus"`         // 确认收货状态：0->未确认；1->已确认
	DeleteStatus          string  `json:"deleteStatus"`          // 删除状态：0->未删除；1->已删除
	UseIntegration        int64   `json:"useIntegration"`        // 下单时使用的积分
	PaymentTime           string  `json:"paymentTime"`           // 支付时间
	DeliveryTime          string  `json:"deliveryTime"`          // 发货时间
	ReceiveTime           string  `json:"receiveTime"`           // 确认收货时间
	CommentTime           string  `json:"commentTime"`           // 评价时间
	ModifyTime            string  `json:"modifyTime"`            // 修改时间
}

type ListOrderResp struct {
	Code     string           `json:"code"`
	Message  string           `json:"message"`
	Current  int64            `json:"current,default=1"`
	Data     []*ListOrderData `json:"data"`
	PageSize int64            `json:"pageSize,default=20"`
	Total    int64            `json:"total"`
}

type UpdateOrderReq struct {
	Id                    int64   `json:"id"` // 订单id
	MemberId              int64   `json:"memberId"`
	PlaceId               int64   `json:"PlaceId"`
	CouponId              int64   `json:"couponId"`
	OrderSn               string  `json:"orderSn"`               // 订单编号
	CreateTime            string  `json:"createTime"`            // 提交时间
	MemberUsername        string  `json:"memberUserName"`        // 用户帐号
	TotalAmount           float64 `json:"totalAmount"`           // 订单总金额
	PayAmount             float64 `json:"payAmount"`             // 应付金额（实际支付金额）
	FreightAmount         float64 `json:"freightAmount"`         // 运费金额
	PromotionAmount       float64 `json:"promotionAmount"`       // 促销优化金额（促销价、满减、阶梯价）
	IntegrationAmount     float64 `json:"integrationAmount"`     // 积分抵扣金额
	CouponAmount          float64 `json:"couponAmount"`          // 优惠券抵扣金额
	DiscountAmount        float64 `json:"discountAmount"`        // 管理员后台调整订单使用的折扣金额
	PayType               string  `json:"payType"`               // 支付方式：0->未支付；1->支付宝；2->微信
	SourceType            string  `json:"sourceType"`            // 订单来源：0->PC订单；1->app订单
	Status                string  `json:"status"`                // 订单状态：0->待付款；1->待发货；2->已发货；3->已完成；4->已关闭；5->无效订单
	OrderType             string  `json:"orderType"`             // 订单类型：0->正常订单；1->秒杀订单
	DeliveryCompany       string  `json:"deliveryCompany"`       // 物流公司(配送方式)
	DeliverySn            string  `json:"deliverySn"`            // 物流单号
	AutoConfirmDay        int64   `json:"autoConfirmDay"`        // 自动确认时间（天）
	Integration           int64   `json:"integration"`           // 可以获得的积分
	Growth                int64   `json:"growth"`                // 可以活动的成长值
	PromotionInfo         string  `json:"promotionInfo"`         // 活动信息
	BillType              string  `json:"billType"`              // 发票类型：0->不开发票；1->电子发票；2->纸质发票
	BillHeader            string  `json:"billHeader"`            // 发票抬头
	BillContent           string  `json:"billContent"`           // 发票内容
	BillReceiverPhone     string  `json:"billReceiverPhone"`     // 收票人电话
	BillReceiverEmail     string  `json:"billReceiverEmail"`     // 收票人邮箱
	ReceiverName          string  `json:"receiverName"`          // 收货人姓名
	ReceiverPhone         string  `json:"receiverPhone"`         // 收货人电话
	ReceiverPostCode      string  `json:"receiverPostCode"`      // 收货人邮编
	ReceiverProvince      string  `json:"receiverProvince"`      // 省份/直辖市
	ReceiverCity          string  `json:"receiverCity"`          // 城市
	ReceiverRegion        string  `json:"receiverRegion"`        // 区
	ReceiverDetailAddress string  `json:"receiverDetailAddress"` // 详细地址
	Note                  string  `json:"note"`                  // 订单备注
	ConfirmStatus         string  `json:"confirmStatus"`         // 确认收货状态：0->未确认；1->已确认
	DeleteStatus          string  `json:"deleteStatus"`          // 删除状态：0->未删除；1->已删除
	UseIntegration        int64   `json:"useIntegration"`        // 下单时使用的积分
	PaymentTime           string  `json:"paymentTime"`           // 支付时间
	DeliveryTime          string  `json:"deliveryTime"`          // 发货时间
	ReceiveTime           string  `json:"receiveTime"`           // 确认收货时间
	CommentTime           string  `json:"commentTime"`           // 评价时间
	ModifyTime            string  `json:"modifyTime"`            // 修改时间
}

type UpdateOrderResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteOrderReq struct {
	Id int64 `json:"id"`
}

type DeleteOrderResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type AddReturnResonReq struct {
	Name string `json:"name"` // 退货类型
	Sort int64  `json:"sort"`
}

type AddReturnResonResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type ListReturnResonReq struct {
	Current  int64  `json:"current,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Name     string `json:"name,optional"` // 退货类型
}

type ListReturnResonData struct {
	Id   int64  `json:"id"`
	Name string `json:"name"` // 退货类型
	Sort int64  `json:"sort"`
}

type ListReturnResonResp struct {
	Code     string                 `json:"code"`
	Message  string                 `json:"message"`
	Current  int64                  `json:"current,default=1"`
	Data     []*ListReturnResonData `json:"data"`
	PageSize int64                  `json:"pageSize,default=20"`
	Total    int64                  `json:"total"`
}

type UpdateReturnResonReq struct {
	Id   int64  `json:"id"`
	Name string `json:"name"` // 退货类型
	Sort int64  `json:"sort"`
}

type UpdateReturnResonResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

type DeleteReturnResonReq struct {
	Ids []int64 `json:"ids"`
}

type DeleteReturnResonResp struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}
