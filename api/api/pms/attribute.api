info(
    desc: "属性分类"
    author: "koobe"
    email: "1002219331@qq.com"
)

type (
    addProductAttributeReq struct {
        ProductAttributeCategoryId int64  `json:"productAttributeCategoryId"` // 属性分类id
        Name                       string `json:"name"`
        SelectType                 string  `json:"selectType"`     // 属性选择类型：0->唯一；1->单选；2->多选
        InputType                  string  `json:"inputType"`      // 属性录入方式：0->手工录入；1->从列表中选取
        InputList                  string `json:"inputList,optional"`      // 可选值列表，以逗号隔开
        Sort                       int64  `json:"sort"`            // 排序字段：最高的可以单独上传图片
        FilterType                 string  `json:"filterType"`     // 分类筛选样式：1->普通；1->颜色
        SearchType                 string  `json:"searchType"`     // 检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
        RelatedStatus              string  `json:"relatedStatus"`  // 相同属性产品是否关联；0->不关联；1->关联
        HandAddStatus              string  `json:"handAddStatus"` // 是否支持手动新增；0->不支持；1->支持
        Type                       string  `json:"type"`            // 属性的类型；0->规格；1->参数
    }
    addProductAttributeResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    ListProductAttributeReq struct {
        Current int64 `json:"current,default=1"`
        PageSize int64 `json:"pageSize,default=20"`
        Name   string `json:"name,optional"`
        Type  string  `json:"type,default=2"`            // 属性的类型；0->规格；1->参数
        ProductAttributeCategoryId int64  `json:"productAttributeCategoryId,default=0"`
    }
    ListProductAttributeData struct {
        Id                         int64  `json:"id"`
        ProductAttributeCategoryId int64  `json:"productAttributeCategoryId"`
        Name                       string `json:"name"`
        SelectType                 string  `json:"selectType"`     // 属性选择类型：0->唯一；1->单选；2->多选
        InputType                  string  `json:"inputType"`      // 属性录入方式：0->手工录入；1->从列表中选取
        InputList                  string `json:"inputList"`      // 可选值列表，以逗号隔开
        Sort                       int64  `json:"sort"`            // 排序字段：最高的可以单独上传图片
        FilterType                 string  `json:"filterType"`     // 分类筛选样式：1->普通；1->颜色
        SearchType                 string  `json:"searchType"`     // 检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
        RelatedStatus              string  `json:"relatedStatus"`  // 相同属性产品是否关联；0->不关联；1->关联
        HandAddStatus              string  `json:"handAddStatus"` // 是否支持手动新增；0->不支持；1->支持
        Type                       string  `json:"type"`            // 属性的类型；0->规格；1->参数
    }
    ListProductAttributeResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Current int64 `json:"current,default=1"`
        Data []*ListProductAttributeData `json:"data"`
        PageSize int64 `json:"pageSize,default=20"`
        Total int64 `json:"total"`
    }
    UpdateProductAttributeReq struct {
        Id                         int64  `json:"id"`
        ProductAttributeCategoryId int64  `json:"productAttributeCategoryId"`
        Name                       string `json:"name"`
        SelectType                 string  `json:"selectType"`     // 属性选择类型：0->唯一；1->单选；2->多选
        InputType                  string  `json:"inputType"`      // 属性录入方式：0->手工录入；1->从列表中选取
        InputList                  string `json:"inputList,optional"`      // 可选值列表，以逗号隔开
        Sort                       int64  `json:"sort"`            // 排序字段：最高的可以单独上传图片
        FilterType                 string  `json:"filterType"`     // 分类筛选样式：1->普通；1->颜色
        SearchType                 string  `json:"searchType"`     // 检索类型；0->不需要进行检索；1->关键字检索；2->范围检索
        RelatedStatus              string  `json:"relatedStatus"`  // 相同属性产品是否关联；0->不关联；1->关联
        HandAddStatus              string  `json:"handAddStatus"` // 是否支持手动新增；0->不支持；1->支持
        Type                       string  `json:"type"`            // 属性的类型；0->规格；1->参数
    }
    UpdateProductAttributeResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    DeleteProductAttributeReq struct {
        Ids []int64 `json:"ids"`
    }
    DeleteProductAttributeResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    group: pms/attribute
    prefix: /api/product/attribute
)
service api {
    @handler ProductAttributeAdd
    post /add (addProductAttributeReq) returns (addProductAttributeResp)

    @handler ProductAttributeList
    post /list (ListProductAttributeReq) returns (ListProductAttributeResp)

    @handler ProductAttributeUpdate
    post /update (UpdateProductAttributeReq) returns (UpdateProductAttributeResp)

    @handler ProductAttributeDelete
    post /delete (DeleteProductAttributeReq) returns (DeleteProductAttributeResp)
}
