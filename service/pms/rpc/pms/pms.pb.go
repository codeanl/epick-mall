// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: pms.proto

package pms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId                    int64   `protobuf:"varint,2,opt,name=BrandId,proto3" json:"BrandId,omitempty"`
	ProductCategoryId          int64   `protobuf:"varint,3,opt,name=ProductCategoryId,proto3" json:"ProductCategoryId,omitempty"`
	FeightTemplateId           int64   `protobuf:"varint,4,opt,name=FeightTemplateId,proto3" json:"FeightTemplateId,omitempty"`
	ProductAttributeCategoryId int64   `protobuf:"varint,5,opt,name=ProductAttributeCategoryId,proto3" json:"ProductAttributeCategoryId,omitempty"`
	Name                       string  `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	Pic                        string  `protobuf:"bytes,7,opt,name=Pic,proto3" json:"Pic,omitempty"`
	ProductSn                  string  `protobuf:"bytes,8,opt,name=ProductSn,proto3" json:"ProductSn,omitempty"`
	DeleteStatus               string  `protobuf:"bytes,9,opt,name=DeleteStatus,proto3" json:"DeleteStatus,omitempty"`
	PublishStatus              string  `protobuf:"bytes,10,opt,name=PublishStatus,proto3" json:"PublishStatus,omitempty"`
	NewStatus                  string  `protobuf:"bytes,11,opt,name=NewStatus,proto3" json:"NewStatus,omitempty"`
	RecommandStatus            string  `protobuf:"bytes,12,opt,name=RecommandStatus,proto3" json:"RecommandStatus,omitempty"`
	Sort                       int64   `protobuf:"varint,14,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Sale                       int64   `protobuf:"varint,15,opt,name=Sale,proto3" json:"Sale,omitempty"`
	Price                      float64 `protobuf:"fixed64,16,opt,name=Price,proto3" json:"Price,omitempty"`
	PromotionPrice             float64 `protobuf:"fixed64,17,opt,name=PromotionPrice,proto3" json:"PromotionPrice,omitempty"`
	GiftGrowth                 int64   `protobuf:"varint,18,opt,name=GiftGrowth,proto3" json:"GiftGrowth,omitempty"`
	GiftPoint                  int64   `protobuf:"varint,19,opt,name=GiftPoint,proto3" json:"GiftPoint,omitempty"`
	UsePointLimit              int64   `protobuf:"varint,20,opt,name=UsePointLimit,proto3" json:"UsePointLimit,omitempty"`
	SubTitle                   string  `protobuf:"bytes,21,opt,name=SubTitle,proto3" json:"SubTitle,omitempty"`
	Description                string  `protobuf:"bytes,22,opt,name=Description,proto3" json:"Description,omitempty"`
	OriginalPrice              float64 `protobuf:"fixed64,23,opt,name=OriginalPrice,proto3" json:"OriginalPrice,omitempty"`
	Stock                      int64   `protobuf:"varint,24,opt,name=Stock,proto3" json:"Stock,omitempty"`
	LowStock                   int64   `protobuf:"varint,25,opt,name=LowStock,proto3" json:"LowStock,omitempty"`
	Unit                       string  `protobuf:"bytes,26,opt,name=Unit,proto3" json:"Unit,omitempty"`
	Weight                     float64 `protobuf:"fixed64,27,opt,name=Weight,proto3" json:"Weight,omitempty"`
	PreviewStatus              string  `protobuf:"bytes,28,opt,name=PreviewStatus,proto3" json:"PreviewStatus,omitempty"`
	ServiceIds                 string  `protobuf:"bytes,29,opt,name=ServiceIds,proto3" json:"ServiceIds,omitempty"`
	Keywords                   string  `protobuf:"bytes,30,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Note                       string  `protobuf:"bytes,31,opt,name=Note,proto3" json:"Note,omitempty"`
	AlbumPics                  string  `protobuf:"bytes,32,opt,name=AlbumPics,proto3" json:"AlbumPics,omitempty"`
	DetailTitle                string  `protobuf:"bytes,33,opt,name=DetailTitle,proto3" json:"DetailTitle,omitempty"`
	DetailDesc                 string  `protobuf:"bytes,34,opt,name=DetailDesc,proto3" json:"DetailDesc,omitempty"`
	DetailHtml                 string  `protobuf:"bytes,35,opt,name=DetailHtml,proto3" json:"DetailHtml,omitempty"`
	DetailMobileHtml           string  `protobuf:"bytes,36,opt,name=DetailMobileHtml,proto3" json:"DetailMobileHtml,omitempty"`
	PromotionStartTime         string  `protobuf:"bytes,37,opt,name=PromotionStartTime,proto3" json:"PromotionStartTime,omitempty"`
	PromotionEndTime           string  `protobuf:"bytes,38,opt,name=PromotionEndTime,proto3" json:"PromotionEndTime,omitempty"`
	PromotionPerLimit          int64   `protobuf:"varint,39,opt,name=PromotionPerLimit,proto3" json:"PromotionPerLimit,omitempty"`
	PromotionType              string  `protobuf:"bytes,40,opt,name=PromotionType,proto3" json:"PromotionType,omitempty"`
	BrandName                  string  `protobuf:"bytes,41,opt,name=BrandName,proto3" json:"BrandName,omitempty"`
	ProductCategoryName        string  `protobuf:"bytes,42,opt,name=ProductCategoryName,proto3" json:"ProductCategoryName,omitempty"`
}

func (x *ProductAddReq) Reset() {
	*x = ProductAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAddReq) ProtoMessage() {}

func (x *ProductAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAddReq.ProtoReflect.Descriptor instead.
func (*ProductAddReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{0}
}

func (x *ProductAddReq) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *ProductAddReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *ProductAddReq) GetFeightTemplateId() int64 {
	if x != nil {
		return x.FeightTemplateId
	}
	return 0
}

func (x *ProductAddReq) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *ProductAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductAddReq) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *ProductAddReq) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *ProductAddReq) GetDeleteStatus() string {
	if x != nil {
		return x.DeleteStatus
	}
	return ""
}

func (x *ProductAddReq) GetPublishStatus() string {
	if x != nil {
		return x.PublishStatus
	}
	return ""
}

func (x *ProductAddReq) GetNewStatus() string {
	if x != nil {
		return x.NewStatus
	}
	return ""
}

func (x *ProductAddReq) GetRecommandStatus() string {
	if x != nil {
		return x.RecommandStatus
	}
	return ""
}

func (x *ProductAddReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductAddReq) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *ProductAddReq) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductAddReq) GetPromotionPrice() float64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *ProductAddReq) GetGiftGrowth() int64 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *ProductAddReq) GetGiftPoint() int64 {
	if x != nil {
		return x.GiftPoint
	}
	return 0
}

func (x *ProductAddReq) GetUsePointLimit() int64 {
	if x != nil {
		return x.UsePointLimit
	}
	return 0
}

func (x *ProductAddReq) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *ProductAddReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductAddReq) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *ProductAddReq) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductAddReq) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *ProductAddReq) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *ProductAddReq) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductAddReq) GetPreviewStatus() string {
	if x != nil {
		return x.PreviewStatus
	}
	return ""
}

func (x *ProductAddReq) GetServiceIds() string {
	if x != nil {
		return x.ServiceIds
	}
	return ""
}

func (x *ProductAddReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ProductAddReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ProductAddReq) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *ProductAddReq) GetDetailTitle() string {
	if x != nil {
		return x.DetailTitle
	}
	return ""
}

func (x *ProductAddReq) GetDetailDesc() string {
	if x != nil {
		return x.DetailDesc
	}
	return ""
}

func (x *ProductAddReq) GetDetailHtml() string {
	if x != nil {
		return x.DetailHtml
	}
	return ""
}

func (x *ProductAddReq) GetDetailMobileHtml() string {
	if x != nil {
		return x.DetailMobileHtml
	}
	return ""
}

func (x *ProductAddReq) GetPromotionStartTime() string {
	if x != nil {
		return x.PromotionStartTime
	}
	return ""
}

func (x *ProductAddReq) GetPromotionEndTime() string {
	if x != nil {
		return x.PromotionEndTime
	}
	return ""
}

func (x *ProductAddReq) GetPromotionPerLimit() int64 {
	if x != nil {
		return x.PromotionPerLimit
	}
	return 0
}

func (x *ProductAddReq) GetPromotionType() string {
	if x != nil {
		return x.PromotionType
	}
	return ""
}

func (x *ProductAddReq) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *ProductAddReq) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

type ProductAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductAddResp) Reset() {
	*x = ProductAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAddResp) ProtoMessage() {}

func (x *ProductAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAddResp.ProtoReflect.Descriptor instead.
func (*ProductAddResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{1}
}

func (x *ProductAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         int64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BrandId                    int64   `protobuf:"varint,2,opt,name=BrandId,proto3" json:"BrandId,omitempty"`
	ProductCategoryId          int64   `protobuf:"varint,3,opt,name=ProductCategoryId,proto3" json:"ProductCategoryId,omitempty"`
	FeightTemplateId           int64   `protobuf:"varint,4,opt,name=FeightTemplateId,proto3" json:"FeightTemplateId,omitempty"`
	ProductAttributeCategoryId int64   `protobuf:"varint,5,opt,name=ProductAttributeCategoryId,proto3" json:"ProductAttributeCategoryId,omitempty"`
	Name                       string  `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	Pic                        string  `protobuf:"bytes,7,opt,name=Pic,proto3" json:"Pic,omitempty"`
	ProductSn                  string  `protobuf:"bytes,8,opt,name=ProductSn,proto3" json:"ProductSn,omitempty"`
	DeleteStatus               string  `protobuf:"bytes,9,opt,name=DeleteStatus,proto3" json:"DeleteStatus,omitempty"`
	PublishStatus              string  `protobuf:"bytes,10,opt,name=PublishStatus,proto3" json:"PublishStatus,omitempty"`
	NewStatus                  string  `protobuf:"bytes,11,opt,name=NewStatus,proto3" json:"NewStatus,omitempty"`
	RecommandStatus            string  `protobuf:"bytes,12,opt,name=RecommandStatus,proto3" json:"RecommandStatus,omitempty"`
	Sort                       int64   `protobuf:"varint,14,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Sale                       int64   `protobuf:"varint,15,opt,name=Sale,proto3" json:"Sale,omitempty"`
	Price                      float64 `protobuf:"fixed64,16,opt,name=Price,proto3" json:"Price,omitempty"`
	PromotionPrice             float64 `protobuf:"fixed64,17,opt,name=PromotionPrice,proto3" json:"PromotionPrice,omitempty"`
	GiftGrowth                 int64   `protobuf:"varint,18,opt,name=GiftGrowth,proto3" json:"GiftGrowth,omitempty"`
	GiftPoint                  int64   `protobuf:"varint,19,opt,name=GiftPoint,proto3" json:"GiftPoint,omitempty"`
	UsePointLimit              int64   `protobuf:"varint,20,opt,name=UsePointLimit,proto3" json:"UsePointLimit,omitempty"`
	SubTitle                   string  `protobuf:"bytes,21,opt,name=SubTitle,proto3" json:"SubTitle,omitempty"`
	Description                string  `protobuf:"bytes,22,opt,name=Description,proto3" json:"Description,omitempty"`
	OriginalPrice              float64 `protobuf:"fixed64,23,opt,name=OriginalPrice,proto3" json:"OriginalPrice,omitempty"`
	Stock                      int64   `protobuf:"varint,24,opt,name=Stock,proto3" json:"Stock,omitempty"`
	LowStock                   int64   `protobuf:"varint,25,opt,name=LowStock,proto3" json:"LowStock,omitempty"`
	Unit                       string  `protobuf:"bytes,26,opt,name=Unit,proto3" json:"Unit,omitempty"`
	Weight                     float64 `protobuf:"fixed64,27,opt,name=Weight,proto3" json:"Weight,omitempty"`
	PreviewStatus              string  `protobuf:"bytes,28,opt,name=PreviewStatus,proto3" json:"PreviewStatus,omitempty"`
	ServiceIds                 string  `protobuf:"bytes,29,opt,name=ServiceIds,proto3" json:"ServiceIds,omitempty"`
	Keywords                   string  `protobuf:"bytes,30,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Note                       string  `protobuf:"bytes,31,opt,name=Note,proto3" json:"Note,omitempty"`
	AlbumPics                  string  `protobuf:"bytes,32,opt,name=AlbumPics,proto3" json:"AlbumPics,omitempty"`
	DetailTitle                string  `protobuf:"bytes,33,opt,name=DetailTitle,proto3" json:"DetailTitle,omitempty"`
	DetailDesc                 string  `protobuf:"bytes,34,opt,name=DetailDesc,proto3" json:"DetailDesc,omitempty"`
	DetailHtml                 string  `protobuf:"bytes,35,opt,name=DetailHtml,proto3" json:"DetailHtml,omitempty"`
	DetailMobileHtml           string  `protobuf:"bytes,36,opt,name=DetailMobileHtml,proto3" json:"DetailMobileHtml,omitempty"`
	PromotionStartTime         string  `protobuf:"bytes,37,opt,name=PromotionStartTime,proto3" json:"PromotionStartTime,omitempty"`
	PromotionEndTime           string  `protobuf:"bytes,38,opt,name=PromotionEndTime,proto3" json:"PromotionEndTime,omitempty"`
	PromotionPerLimit          int64   `protobuf:"varint,39,opt,name=PromotionPerLimit,proto3" json:"PromotionPerLimit,omitempty"`
	PromotionType              string  `protobuf:"bytes,40,opt,name=PromotionType,proto3" json:"PromotionType,omitempty"`
	BrandName                  string  `protobuf:"bytes,41,opt,name=BrandName,proto3" json:"BrandName,omitempty"`
	ProductCategoryName        string  `protobuf:"bytes,42,opt,name=ProductCategoryName,proto3" json:"ProductCategoryName,omitempty"`
}

func (x *ProductUpdateReq) Reset() {
	*x = ProductUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductUpdateReq) ProtoMessage() {}

func (x *ProductUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductUpdateReq.ProtoReflect.Descriptor instead.
func (*ProductUpdateReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{2}
}

func (x *ProductUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductUpdateReq) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *ProductUpdateReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *ProductUpdateReq) GetFeightTemplateId() int64 {
	if x != nil {
		return x.FeightTemplateId
	}
	return 0
}

func (x *ProductUpdateReq) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *ProductUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductUpdateReq) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *ProductUpdateReq) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *ProductUpdateReq) GetDeleteStatus() string {
	if x != nil {
		return x.DeleteStatus
	}
	return ""
}

func (x *ProductUpdateReq) GetPublishStatus() string {
	if x != nil {
		return x.PublishStatus
	}
	return ""
}

func (x *ProductUpdateReq) GetNewStatus() string {
	if x != nil {
		return x.NewStatus
	}
	return ""
}

func (x *ProductUpdateReq) GetRecommandStatus() string {
	if x != nil {
		return x.RecommandStatus
	}
	return ""
}

func (x *ProductUpdateReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductUpdateReq) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *ProductUpdateReq) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductUpdateReq) GetPromotionPrice() float64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *ProductUpdateReq) GetGiftGrowth() int64 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *ProductUpdateReq) GetGiftPoint() int64 {
	if x != nil {
		return x.GiftPoint
	}
	return 0
}

func (x *ProductUpdateReq) GetUsePointLimit() int64 {
	if x != nil {
		return x.UsePointLimit
	}
	return 0
}

func (x *ProductUpdateReq) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *ProductUpdateReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductUpdateReq) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *ProductUpdateReq) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductUpdateReq) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *ProductUpdateReq) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *ProductUpdateReq) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductUpdateReq) GetPreviewStatus() string {
	if x != nil {
		return x.PreviewStatus
	}
	return ""
}

func (x *ProductUpdateReq) GetServiceIds() string {
	if x != nil {
		return x.ServiceIds
	}
	return ""
}

func (x *ProductUpdateReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ProductUpdateReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ProductUpdateReq) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *ProductUpdateReq) GetDetailTitle() string {
	if x != nil {
		return x.DetailTitle
	}
	return ""
}

func (x *ProductUpdateReq) GetDetailDesc() string {
	if x != nil {
		return x.DetailDesc
	}
	return ""
}

func (x *ProductUpdateReq) GetDetailHtml() string {
	if x != nil {
		return x.DetailHtml
	}
	return ""
}

func (x *ProductUpdateReq) GetDetailMobileHtml() string {
	if x != nil {
		return x.DetailMobileHtml
	}
	return ""
}

func (x *ProductUpdateReq) GetPromotionStartTime() string {
	if x != nil {
		return x.PromotionStartTime
	}
	return ""
}

func (x *ProductUpdateReq) GetPromotionEndTime() string {
	if x != nil {
		return x.PromotionEndTime
	}
	return ""
}

func (x *ProductUpdateReq) GetPromotionPerLimit() int64 {
	if x != nil {
		return x.PromotionPerLimit
	}
	return 0
}

func (x *ProductUpdateReq) GetPromotionType() string {
	if x != nil {
		return x.PromotionType
	}
	return ""
}

func (x *ProductUpdateReq) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *ProductUpdateReq) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

type ProductUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductUpdateResp) Reset() {
	*x = ProductUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductUpdateResp) ProtoMessage() {}

func (x *ProductUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductUpdateResp.ProtoReflect.Descriptor instead.
func (*ProductUpdateResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{3}
}

func (x *ProductUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ProductDeleteReq) Reset() {
	*x = ProductDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDeleteReq) ProtoMessage() {}

func (x *ProductDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDeleteReq.ProtoReflect.Descriptor instead.
func (*ProductDeleteReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{4}
}

func (x *ProductDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ProductDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductDeleteResp) Reset() {
	*x = ProductDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDeleteResp) ProtoMessage() {}

func (x *ProductDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDeleteResp.ProtoReflect.Descriptor instead.
func (*ProductDeleteResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{5}
}

func (x *ProductDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ProductListReq) Reset() {
	*x = ProductListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListReq) ProtoMessage() {}

func (x *ProductListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListReq.ProtoReflect.Descriptor instead.
func (*ProductListReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{6}
}

func (x *ProductListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ProductListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ProductListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         int64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BrandId                    int64   `protobuf:"varint,2,opt,name=BrandId,proto3" json:"BrandId,omitempty"`
	ProductCategoryId          int64   `protobuf:"varint,3,opt,name=ProductCategoryId,proto3" json:"ProductCategoryId,omitempty"`
	FeightTemplateId           int64   `protobuf:"varint,4,opt,name=FeightTemplateId,proto3" json:"FeightTemplateId,omitempty"`
	ProductAttributeCategoryId int64   `protobuf:"varint,5,opt,name=ProductAttributeCategoryId,proto3" json:"ProductAttributeCategoryId,omitempty"`
	Name                       string  `protobuf:"bytes,6,opt,name=Name,proto3" json:"Name,omitempty"`
	Pic                        string  `protobuf:"bytes,7,opt,name=Pic,proto3" json:"Pic,omitempty"`
	ProductSn                  string  `protobuf:"bytes,8,opt,name=ProductSn,proto3" json:"ProductSn,omitempty"`
	DeleteStatus               string  `protobuf:"bytes,9,opt,name=DeleteStatus,proto3" json:"DeleteStatus,omitempty"`
	PublishStatus              string  `protobuf:"bytes,10,opt,name=PublishStatus,proto3" json:"PublishStatus,omitempty"`
	NewStatus                  string  `protobuf:"bytes,11,opt,name=NewStatus,proto3" json:"NewStatus,omitempty"`
	RecommandStatus            string  `protobuf:"bytes,12,opt,name=RecommandStatus,proto3" json:"RecommandStatus,omitempty"`
	Sort                       int64   `protobuf:"varint,14,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Sale                       int64   `protobuf:"varint,15,opt,name=Sale,proto3" json:"Sale,omitempty"`
	Price                      float64 `protobuf:"fixed64,16,opt,name=Price,proto3" json:"Price,omitempty"`
	PromotionPrice             float64 `protobuf:"fixed64,17,opt,name=PromotionPrice,proto3" json:"PromotionPrice,omitempty"`
	GiftGrowth                 int64   `protobuf:"varint,18,opt,name=GiftGrowth,proto3" json:"GiftGrowth,omitempty"`
	GiftPoint                  int64   `protobuf:"varint,19,opt,name=GiftPoint,proto3" json:"GiftPoint,omitempty"`
	UsePointLimit              int64   `protobuf:"varint,20,opt,name=UsePointLimit,proto3" json:"UsePointLimit,omitempty"`
	SubTitle                   string  `protobuf:"bytes,21,opt,name=SubTitle,proto3" json:"SubTitle,omitempty"`
	Description                string  `protobuf:"bytes,22,opt,name=Description,proto3" json:"Description,omitempty"`
	OriginalPrice              float64 `protobuf:"fixed64,23,opt,name=OriginalPrice,proto3" json:"OriginalPrice,omitempty"`
	Stock                      int64   `protobuf:"varint,24,opt,name=Stock,proto3" json:"Stock,omitempty"`
	LowStock                   int64   `protobuf:"varint,25,opt,name=LowStock,proto3" json:"LowStock,omitempty"`
	Unit                       string  `protobuf:"bytes,26,opt,name=Unit,proto3" json:"Unit,omitempty"`
	Weight                     float64 `protobuf:"fixed64,27,opt,name=Weight,proto3" json:"Weight,omitempty"`
	PreviewStatus              string  `protobuf:"bytes,28,opt,name=PreviewStatus,proto3" json:"PreviewStatus,omitempty"`
	ServiceIds                 string  `protobuf:"bytes,29,opt,name=ServiceIds,proto3" json:"ServiceIds,omitempty"`
	Keywords                   string  `protobuf:"bytes,30,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Note                       string  `protobuf:"bytes,31,opt,name=Note,proto3" json:"Note,omitempty"`
	AlbumPics                  string  `protobuf:"bytes,32,opt,name=AlbumPics,proto3" json:"AlbumPics,omitempty"`
	DetailTitle                string  `protobuf:"bytes,33,opt,name=DetailTitle,proto3" json:"DetailTitle,omitempty"`
	DetailDesc                 string  `protobuf:"bytes,34,opt,name=DetailDesc,proto3" json:"DetailDesc,omitempty"`
	DetailHtml                 string  `protobuf:"bytes,35,opt,name=DetailHtml,proto3" json:"DetailHtml,omitempty"`
	DetailMobileHtml           string  `protobuf:"bytes,36,opt,name=DetailMobileHtml,proto3" json:"DetailMobileHtml,omitempty"`
	PromotionStartTime         string  `protobuf:"bytes,37,opt,name=PromotionStartTime,proto3" json:"PromotionStartTime,omitempty"`
	PromotionEndTime           string  `protobuf:"bytes,38,opt,name=PromotionEndTime,proto3" json:"PromotionEndTime,omitempty"`
	PromotionPerLimit          int64   `protobuf:"varint,39,opt,name=PromotionPerLimit,proto3" json:"PromotionPerLimit,omitempty"`
	PromotionType              string  `protobuf:"bytes,40,opt,name=PromotionType,proto3" json:"PromotionType,omitempty"`
	BrandName                  string  `protobuf:"bytes,41,opt,name=BrandName,proto3" json:"BrandName,omitempty"`
	ProductCategoryName        string  `protobuf:"bytes,42,opt,name=ProductCategoryName,proto3" json:"ProductCategoryName,omitempty"`
}

func (x *ProductListData) Reset() {
	*x = ProductListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListData) ProtoMessage() {}

func (x *ProductListData) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListData.ProtoReflect.Descriptor instead.
func (*ProductListData) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{7}
}

func (x *ProductListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductListData) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *ProductListData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *ProductListData) GetFeightTemplateId() int64 {
	if x != nil {
		return x.FeightTemplateId
	}
	return 0
}

func (x *ProductListData) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *ProductListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductListData) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *ProductListData) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *ProductListData) GetDeleteStatus() string {
	if x != nil {
		return x.DeleteStatus
	}
	return ""
}

func (x *ProductListData) GetPublishStatus() string {
	if x != nil {
		return x.PublishStatus
	}
	return ""
}

func (x *ProductListData) GetNewStatus() string {
	if x != nil {
		return x.NewStatus
	}
	return ""
}

func (x *ProductListData) GetRecommandStatus() string {
	if x != nil {
		return x.RecommandStatus
	}
	return ""
}

func (x *ProductListData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductListData) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *ProductListData) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductListData) GetPromotionPrice() float64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *ProductListData) GetGiftGrowth() int64 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *ProductListData) GetGiftPoint() int64 {
	if x != nil {
		return x.GiftPoint
	}
	return 0
}

func (x *ProductListData) GetUsePointLimit() int64 {
	if x != nil {
		return x.UsePointLimit
	}
	return 0
}

func (x *ProductListData) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *ProductListData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductListData) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *ProductListData) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductListData) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *ProductListData) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *ProductListData) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductListData) GetPreviewStatus() string {
	if x != nil {
		return x.PreviewStatus
	}
	return ""
}

func (x *ProductListData) GetServiceIds() string {
	if x != nil {
		return x.ServiceIds
	}
	return ""
}

func (x *ProductListData) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ProductListData) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ProductListData) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *ProductListData) GetDetailTitle() string {
	if x != nil {
		return x.DetailTitle
	}
	return ""
}

func (x *ProductListData) GetDetailDesc() string {
	if x != nil {
		return x.DetailDesc
	}
	return ""
}

func (x *ProductListData) GetDetailHtml() string {
	if x != nil {
		return x.DetailHtml
	}
	return ""
}

func (x *ProductListData) GetDetailMobileHtml() string {
	if x != nil {
		return x.DetailMobileHtml
	}
	return ""
}

func (x *ProductListData) GetPromotionStartTime() string {
	if x != nil {
		return x.PromotionStartTime
	}
	return ""
}

func (x *ProductListData) GetPromotionEndTime() string {
	if x != nil {
		return x.PromotionEndTime
	}
	return ""
}

func (x *ProductListData) GetPromotionPerLimit() int64 {
	if x != nil {
		return x.PromotionPerLimit
	}
	return 0
}

func (x *ProductListData) GetPromotionType() string {
	if x != nil {
		return x.PromotionType
	}
	return ""
}

func (x *ProductListData) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *ProductListData) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

type ProductListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ProductListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProductListResp) Reset() {
	*x = ProductListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListResp) ProtoMessage() {}

func (x *ProductListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListResp.ProtoReflect.Descriptor instead.
func (*ProductListResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{8}
}

func (x *ProductListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProductListResp) GetList() []*ProductListData {
	if x != nil {
		return x.List
	}
	return nil
}

// ---------------------------------
type BrandAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	FirstLetter         string `protobuf:"bytes,3,opt,name=FirstLetter,proto3" json:"FirstLetter,omitempty"`
	Sort                int64  `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`
	FactoryStatus       string `protobuf:"bytes,5,opt,name=FactoryStatus,proto3" json:"FactoryStatus,omitempty"`
	ShowStatus          string `protobuf:"bytes,6,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`
	ProductCount        int64  `protobuf:"varint,7,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`
	ProductCommentCount int64  `protobuf:"varint,8,opt,name=ProductCommentCount,proto3" json:"ProductCommentCount,omitempty"`
	Logo                string `protobuf:"bytes,9,opt,name=Logo,proto3" json:"Logo,omitempty"`
	BigPic              string `protobuf:"bytes,10,opt,name=BigPic,proto3" json:"BigPic,omitempty"`
	BrandStory          string `protobuf:"bytes,11,opt,name=BrandStory,proto3" json:"BrandStory,omitempty"`
}

func (x *BrandAddReq) Reset() {
	*x = BrandAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandAddReq) ProtoMessage() {}

func (x *BrandAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandAddReq.ProtoReflect.Descriptor instead.
func (*BrandAddReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{9}
}

func (x *BrandAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandAddReq) GetFirstLetter() string {
	if x != nil {
		return x.FirstLetter
	}
	return ""
}

func (x *BrandAddReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *BrandAddReq) GetFactoryStatus() string {
	if x != nil {
		return x.FactoryStatus
	}
	return ""
}

func (x *BrandAddReq) GetShowStatus() string {
	if x != nil {
		return x.ShowStatus
	}
	return ""
}

func (x *BrandAddReq) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *BrandAddReq) GetProductCommentCount() int64 {
	if x != nil {
		return x.ProductCommentCount
	}
	return 0
}

func (x *BrandAddReq) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *BrandAddReq) GetBigPic() string {
	if x != nil {
		return x.BigPic
	}
	return ""
}

func (x *BrandAddReq) GetBrandStory() string {
	if x != nil {
		return x.BrandStory
	}
	return ""
}

type BrandAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *BrandAddResp) Reset() {
	*x = BrandAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandAddResp) ProtoMessage() {}

func (x *BrandAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandAddResp.ProtoReflect.Descriptor instead.
func (*BrandAddResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{10}
}

func (x *BrandAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type BrandListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	FactoryStatus string `protobuf:"bytes,4,opt,name=FactoryStatus,proto3" json:"FactoryStatus,omitempty"`
	ShowStatus    string `protobuf:"bytes,5,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`
}

func (x *BrandListReq) Reset() {
	*x = BrandListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListReq) ProtoMessage() {}

func (x *BrandListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListReq.ProtoReflect.Descriptor instead.
func (*BrandListReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{11}
}

func (x *BrandListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *BrandListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *BrandListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandListReq) GetFactoryStatus() string {
	if x != nil {
		return x.FactoryStatus
	}
	return ""
}

func (x *BrandListReq) GetShowStatus() string {
	if x != nil {
		return x.ShowStatus
	}
	return ""
}

type BrandListByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BrandListByIdsReq) Reset() {
	*x = BrandListByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListByIdsReq) ProtoMessage() {}

func (x *BrandListByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListByIdsReq.ProtoReflect.Descriptor instead.
func (*BrandListByIdsReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{12}
}

func (x *BrandListByIdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BrandListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	FirstLetter         string `protobuf:"bytes,3,opt,name=FirstLetter,proto3" json:"FirstLetter,omitempty"`
	Sort                int64  `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`
	FactoryStatus       string `protobuf:"bytes,5,opt,name=FactoryStatus,proto3" json:"FactoryStatus,omitempty"`
	ShowStatus          string `protobuf:"bytes,6,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`
	ProductCount        int64  `protobuf:"varint,7,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`
	ProductCommentCount int64  `protobuf:"varint,8,opt,name=ProductCommentCount,proto3" json:"ProductCommentCount,omitempty"`
	Logo                string `protobuf:"bytes,9,opt,name=Logo,proto3" json:"Logo,omitempty"`
	BigPic              string `protobuf:"bytes,10,opt,name=BigPic,proto3" json:"BigPic,omitempty"`
	BrandStory          string `protobuf:"bytes,11,opt,name=BrandStory,proto3" json:"BrandStory,omitempty"`
}

func (x *BrandListData) Reset() {
	*x = BrandListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListData) ProtoMessage() {}

func (x *BrandListData) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListData.ProtoReflect.Descriptor instead.
func (*BrandListData) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{13}
}

func (x *BrandListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandListData) GetFirstLetter() string {
	if x != nil {
		return x.FirstLetter
	}
	return ""
}

func (x *BrandListData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *BrandListData) GetFactoryStatus() string {
	if x != nil {
		return x.FactoryStatus
	}
	return ""
}

func (x *BrandListData) GetShowStatus() string {
	if x != nil {
		return x.ShowStatus
	}
	return ""
}

func (x *BrandListData) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *BrandListData) GetProductCommentCount() int64 {
	if x != nil {
		return x.ProductCommentCount
	}
	return 0
}

func (x *BrandListData) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *BrandListData) GetBigPic() string {
	if x != nil {
		return x.BigPic
	}
	return ""
}

func (x *BrandListData) GetBrandStory() string {
	if x != nil {
		return x.BrandStory
	}
	return ""
}

type BrandListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*BrandListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BrandListResp) Reset() {
	*x = BrandListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListResp) ProtoMessage() {}

func (x *BrandListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListResp.ProtoReflect.Descriptor instead.
func (*BrandListResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{14}
}

func (x *BrandListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BrandListResp) GetList() []*BrandListData {
	if x != nil {
		return x.List
	}
	return nil
}

type BrandUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	FirstLetter         string `protobuf:"bytes,3,opt,name=FirstLetter,proto3" json:"FirstLetter,omitempty"`
	Sort                int64  `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`
	FactoryStatus       string `protobuf:"bytes,5,opt,name=FactoryStatus,proto3" json:"FactoryStatus,omitempty"`
	ShowStatus          string `protobuf:"bytes,6,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`
	ProductCount        int64  `protobuf:"varint,7,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`
	ProductCommentCount int64  `protobuf:"varint,8,opt,name=ProductCommentCount,proto3" json:"ProductCommentCount,omitempty"`
	Logo                string `protobuf:"bytes,9,opt,name=Logo,proto3" json:"Logo,omitempty"`
	BigPic              string `protobuf:"bytes,10,opt,name=BigPic,proto3" json:"BigPic,omitempty"`
	BrandStory          string `protobuf:"bytes,11,opt,name=BrandStory,proto3" json:"BrandStory,omitempty"`
}

func (x *BrandUpdateReq) Reset() {
	*x = BrandUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandUpdateReq) ProtoMessage() {}

func (x *BrandUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandUpdateReq.ProtoReflect.Descriptor instead.
func (*BrandUpdateReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{15}
}

func (x *BrandUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandUpdateReq) GetFirstLetter() string {
	if x != nil {
		return x.FirstLetter
	}
	return ""
}

func (x *BrandUpdateReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *BrandUpdateReq) GetFactoryStatus() string {
	if x != nil {
		return x.FactoryStatus
	}
	return ""
}

func (x *BrandUpdateReq) GetShowStatus() string {
	if x != nil {
		return x.ShowStatus
	}
	return ""
}

func (x *BrandUpdateReq) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *BrandUpdateReq) GetProductCommentCount() int64 {
	if x != nil {
		return x.ProductCommentCount
	}
	return 0
}

func (x *BrandUpdateReq) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *BrandUpdateReq) GetBigPic() string {
	if x != nil {
		return x.BigPic
	}
	return ""
}

func (x *BrandUpdateReq) GetBrandStory() string {
	if x != nil {
		return x.BrandStory
	}
	return ""
}

type BrandUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *BrandUpdateResp) Reset() {
	*x = BrandUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandUpdateResp) ProtoMessage() {}

func (x *BrandUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandUpdateResp.ProtoReflect.Descriptor instead.
func (*BrandUpdateResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{16}
}

func (x *BrandUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type BrandDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BrandDeleteReq) Reset() {
	*x = BrandDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandDeleteReq) ProtoMessage() {}

func (x *BrandDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandDeleteReq.ProtoReflect.Descriptor instead.
func (*BrandDeleteReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{17}
}

func (x *BrandDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BrandDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *BrandDeleteResp) Reset() {
	*x = BrandDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandDeleteResp) ProtoMessage() {}

func (x *BrandDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandDeleteResp.ProtoReflect.Descriptor instead.
func (*BrandDeleteResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{18}
}

func (x *BrandDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductCategoryAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId     int64  `protobuf:"varint,2,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Level        string `protobuf:"bytes,4,opt,name=Level,proto3" json:"Level,omitempty"`
	ProductCount int64  `protobuf:"varint,5,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`
	ProductUnit  string `protobuf:"bytes,6,opt,name=ProductUnit,proto3" json:"ProductUnit,omitempty"`
	NavStatus    string `protobuf:"bytes,7,opt,name=NavStatus,proto3" json:"NavStatus,omitempty"`
	ShowStatus   string `protobuf:"bytes,8,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`
	Sort         int64  `protobuf:"varint,9,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Icon         string `protobuf:"bytes,10,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Keywords     string `protobuf:"bytes,11,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Description  string `protobuf:"bytes,12,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ProductCategoryAddReq) Reset() {
	*x = ProductCategoryAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryAddReq) ProtoMessage() {}

func (x *ProductCategoryAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryAddReq.ProtoReflect.Descriptor instead.
func (*ProductCategoryAddReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{19}
}

func (x *ProductCategoryAddReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ProductCategoryAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductCategoryAddReq) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *ProductCategoryAddReq) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *ProductCategoryAddReq) GetProductUnit() string {
	if x != nil {
		return x.ProductUnit
	}
	return ""
}

func (x *ProductCategoryAddReq) GetNavStatus() string {
	if x != nil {
		return x.NavStatus
	}
	return ""
}

func (x *ProductCategoryAddReq) GetShowStatus() string {
	if x != nil {
		return x.ShowStatus
	}
	return ""
}

func (x *ProductCategoryAddReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductCategoryAddReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ProductCategoryAddReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ProductCategoryAddReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProductCategoryAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductCategoryAddResp) Reset() {
	*x = ProductCategoryAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryAddResp) ProtoMessage() {}

func (x *ProductCategoryAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryAddResp.ProtoReflect.Descriptor instead.
func (*ProductCategoryAddResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{20}
}

func (x *ProductCategoryAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductCategoryFirstListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId int64 `protobuf:"varint,1,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
}

func (x *ProductCategoryFirstListReq) Reset() {
	*x = ProductCategoryFirstListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryFirstListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryFirstListReq) ProtoMessage() {}

func (x *ProductCategoryFirstListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryFirstListReq.ProtoReflect.Descriptor instead.
func (*ProductCategoryFirstListReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{21}
}

func (x *ProductCategoryFirstListReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type ProductCategorySecondListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId int64 `protobuf:"varint,1,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
}

func (x *ProductCategorySecondListReq) Reset() {
	*x = ProductCategorySecondListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategorySecondListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategorySecondListReq) ProtoMessage() {}

func (x *ProductCategorySecondListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategorySecondListReq.ProtoReflect.Descriptor instead.
func (*ProductCategorySecondListReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{22}
}

func (x *ProductCategorySecondListReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type ProductCategoryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	ParentId int64  `protobuf:"varint,4,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
}

func (x *ProductCategoryListReq) Reset() {
	*x = ProductCategoryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryListReq) ProtoMessage() {}

func (x *ProductCategoryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryListReq.ProtoReflect.Descriptor instead.
func (*ProductCategoryListReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{23}
}

func (x *ProductCategoryListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ProductCategoryListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProductCategoryListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductCategoryListReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type ProductCategoryListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ParentId     int64  `protobuf:"varint,2,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Level        string `protobuf:"bytes,4,opt,name=Level,proto3" json:"Level,omitempty"`
	ProductCount int64  `protobuf:"varint,5,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`
	ProductUnit  string `protobuf:"bytes,6,opt,name=ProductUnit,proto3" json:"ProductUnit,omitempty"`
	NavStatus    string `protobuf:"bytes,7,opt,name=NavStatus,proto3" json:"NavStatus,omitempty"`
	ShowStatus   string `protobuf:"bytes,8,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`
	Sort         int64  `protobuf:"varint,9,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Icon         string `protobuf:"bytes,10,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Keywords     string `protobuf:"bytes,11,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Description  string `protobuf:"bytes,12,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ProductCategoryListData) Reset() {
	*x = ProductCategoryListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryListData) ProtoMessage() {}

func (x *ProductCategoryListData) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryListData.ProtoReflect.Descriptor instead.
func (*ProductCategoryListData) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{24}
}

func (x *ProductCategoryListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductCategoryListData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ProductCategoryListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductCategoryListData) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *ProductCategoryListData) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *ProductCategoryListData) GetProductUnit() string {
	if x != nil {
		return x.ProductUnit
	}
	return ""
}

func (x *ProductCategoryListData) GetNavStatus() string {
	if x != nil {
		return x.NavStatus
	}
	return ""
}

func (x *ProductCategoryListData) GetShowStatus() string {
	if x != nil {
		return x.ShowStatus
	}
	return ""
}

func (x *ProductCategoryListData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductCategoryListData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ProductCategoryListData) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ProductCategoryListData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProductCategoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ProductCategoryListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProductCategoryListResp) Reset() {
	*x = ProductCategoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryListResp) ProtoMessage() {}

func (x *ProductCategoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryListResp.ProtoReflect.Descriptor instead.
func (*ProductCategoryListResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{25}
}

func (x *ProductCategoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProductCategoryListResp) GetList() []*ProductCategoryListData {
	if x != nil {
		return x.List
	}
	return nil
}

type ProductCategoryUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ParentId     int64  `protobuf:"varint,2,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Level        string `protobuf:"bytes,4,opt,name=Level,proto3" json:"Level,omitempty"`
	ProductCount int64  `protobuf:"varint,5,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`
	ProductUnit  string `protobuf:"bytes,6,opt,name=ProductUnit,proto3" json:"ProductUnit,omitempty"`
	NavStatus    string `protobuf:"bytes,7,opt,name=NavStatus,proto3" json:"NavStatus,omitempty"`
	ShowStatus   string `protobuf:"bytes,8,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`
	Sort         int64  `protobuf:"varint,9,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Icon         string `protobuf:"bytes,10,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Keywords     string `protobuf:"bytes,11,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Description  string `protobuf:"bytes,12,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ProductCategoryUpdateReq) Reset() {
	*x = ProductCategoryUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryUpdateReq) ProtoMessage() {}

func (x *ProductCategoryUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryUpdateReq.ProtoReflect.Descriptor instead.
func (*ProductCategoryUpdateReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{26}
}

func (x *ProductCategoryUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductCategoryUpdateReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ProductCategoryUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductCategoryUpdateReq) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *ProductCategoryUpdateReq) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *ProductCategoryUpdateReq) GetProductUnit() string {
	if x != nil {
		return x.ProductUnit
	}
	return ""
}

func (x *ProductCategoryUpdateReq) GetNavStatus() string {
	if x != nil {
		return x.NavStatus
	}
	return ""
}

func (x *ProductCategoryUpdateReq) GetShowStatus() string {
	if x != nil {
		return x.ShowStatus
	}
	return ""
}

func (x *ProductCategoryUpdateReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductCategoryUpdateReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ProductCategoryUpdateReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ProductCategoryUpdateReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProductCategoryUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductCategoryUpdateResp) Reset() {
	*x = ProductCategoryUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryUpdateResp) ProtoMessage() {}

func (x *ProductCategoryUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryUpdateResp.ProtoReflect.Descriptor instead.
func (*ProductCategoryUpdateResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{27}
}

func (x *ProductCategoryUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductCategoryDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ProductCategoryDeleteReq) Reset() {
	*x = ProductCategoryDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryDeleteReq) ProtoMessage() {}

func (x *ProductCategoryDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryDeleteReq.ProtoReflect.Descriptor instead.
func (*ProductCategoryDeleteReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{28}
}

func (x *ProductCategoryDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ProductCategoryDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductCategoryDeleteResp) Reset() {
	*x = ProductCategoryDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategoryDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategoryDeleteResp) ProtoMessage() {}

func (x *ProductCategoryDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategoryDeleteResp.ProtoReflect.Descriptor instead.
func (*ProductCategoryDeleteResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{29}
}

func (x *ProductCategoryDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductAttributeAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductAttributeCategoryId int64  `protobuf:"varint,2,opt,name=ProductAttributeCategoryId,proto3" json:"ProductAttributeCategoryId,omitempty"`
	Name                       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	SelectType                 string `protobuf:"bytes,4,opt,name=SelectType,proto3" json:"SelectType,omitempty"`
	InputType                  string `protobuf:"bytes,5,opt,name=InputType,proto3" json:"InputType,omitempty"`
	InputList                  string `protobuf:"bytes,6,opt,name=InputList,proto3" json:"InputList,omitempty"`
	Sort                       int64  `protobuf:"varint,7,opt,name=Sort,proto3" json:"Sort,omitempty"`
	FilterType                 string `protobuf:"bytes,8,opt,name=FilterType,proto3" json:"FilterType,omitempty"`
	SearchType                 string `protobuf:"bytes,9,opt,name=SearchType,proto3" json:"SearchType,omitempty"`
	RelatedStatus              string `protobuf:"bytes,10,opt,name=RelatedStatus,proto3" json:"RelatedStatus,omitempty"`
	HandAddStatus              string `protobuf:"bytes,11,opt,name=HandAddStatus,proto3" json:"HandAddStatus,omitempty"`
	Type                       string `protobuf:"bytes,12,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *ProductAttributeAddReq) Reset() {
	*x = ProductAttributeAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeAddReq) ProtoMessage() {}

func (x *ProductAttributeAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeAddReq.ProtoReflect.Descriptor instead.
func (*ProductAttributeAddReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{30}
}

func (x *ProductAttributeAddReq) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *ProductAttributeAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductAttributeAddReq) GetSelectType() string {
	if x != nil {
		return x.SelectType
	}
	return ""
}

func (x *ProductAttributeAddReq) GetInputType() string {
	if x != nil {
		return x.InputType
	}
	return ""
}

func (x *ProductAttributeAddReq) GetInputList() string {
	if x != nil {
		return x.InputList
	}
	return ""
}

func (x *ProductAttributeAddReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductAttributeAddReq) GetFilterType() string {
	if x != nil {
		return x.FilterType
	}
	return ""
}

func (x *ProductAttributeAddReq) GetSearchType() string {
	if x != nil {
		return x.SearchType
	}
	return ""
}

func (x *ProductAttributeAddReq) GetRelatedStatus() string {
	if x != nil {
		return x.RelatedStatus
	}
	return ""
}

func (x *ProductAttributeAddReq) GetHandAddStatus() string {
	if x != nil {
		return x.HandAddStatus
	}
	return ""
}

func (x *ProductAttributeAddReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ProductAttributeAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductAttributeAddResp) Reset() {
	*x = ProductAttributeAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeAddResp) ProtoMessage() {}

func (x *ProductAttributeAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeAddResp.ProtoReflect.Descriptor instead.
func (*ProductAttributeAddResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{31}
}

func (x *ProductAttributeAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductAttributeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current                    int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize                   int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Name                       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Type                       string `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	ProductAttributeCategoryId int64  `protobuf:"varint,5,opt,name=ProductAttributeCategoryId,proto3" json:"ProductAttributeCategoryId,omitempty"`
}

func (x *ProductAttributeListReq) Reset() {
	*x = ProductAttributeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeListReq) ProtoMessage() {}

func (x *ProductAttributeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeListReq.ProtoReflect.Descriptor instead.
func (*ProductAttributeListReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{32}
}

func (x *ProductAttributeListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ProductAttributeListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProductAttributeListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductAttributeListReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProductAttributeListReq) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

type ProductAttributeListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ProductAttributeCategoryId int64  `protobuf:"varint,2,opt,name=ProductAttributeCategoryId,proto3" json:"ProductAttributeCategoryId,omitempty"`
	Name                       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	SelectType                 string `protobuf:"bytes,4,opt,name=SelectType,proto3" json:"SelectType,omitempty"`
	InputType                  string `protobuf:"bytes,5,opt,name=InputType,proto3" json:"InputType,omitempty"`
	InputList                  string `protobuf:"bytes,6,opt,name=InputList,proto3" json:"InputList,omitempty"`
	Sort                       int64  `protobuf:"varint,7,opt,name=Sort,proto3" json:"Sort,omitempty"`
	FilterType                 string `protobuf:"bytes,8,opt,name=FilterType,proto3" json:"FilterType,omitempty"`
	SearchType                 string `protobuf:"bytes,9,opt,name=SearchType,proto3" json:"SearchType,omitempty"`
	RelatedStatus              string `protobuf:"bytes,10,opt,name=RelatedStatus,proto3" json:"RelatedStatus,omitempty"`
	HandAddStatus              string `protobuf:"bytes,11,opt,name=HandAddStatus,proto3" json:"HandAddStatus,omitempty"`
	Type                       string `protobuf:"bytes,12,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *ProductAttributeListData) Reset() {
	*x = ProductAttributeListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeListData) ProtoMessage() {}

func (x *ProductAttributeListData) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeListData.ProtoReflect.Descriptor instead.
func (*ProductAttributeListData) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{33}
}

func (x *ProductAttributeListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductAttributeListData) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *ProductAttributeListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductAttributeListData) GetSelectType() string {
	if x != nil {
		return x.SelectType
	}
	return ""
}

func (x *ProductAttributeListData) GetInputType() string {
	if x != nil {
		return x.InputType
	}
	return ""
}

func (x *ProductAttributeListData) GetInputList() string {
	if x != nil {
		return x.InputList
	}
	return ""
}

func (x *ProductAttributeListData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductAttributeListData) GetFilterType() string {
	if x != nil {
		return x.FilterType
	}
	return ""
}

func (x *ProductAttributeListData) GetSearchType() string {
	if x != nil {
		return x.SearchType
	}
	return ""
}

func (x *ProductAttributeListData) GetRelatedStatus() string {
	if x != nil {
		return x.RelatedStatus
	}
	return ""
}

func (x *ProductAttributeListData) GetHandAddStatus() string {
	if x != nil {
		return x.HandAddStatus
	}
	return ""
}

func (x *ProductAttributeListData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ProductAttributeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ProductAttributeListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProductAttributeListResp) Reset() {
	*x = ProductAttributeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeListResp) ProtoMessage() {}

func (x *ProductAttributeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeListResp.ProtoReflect.Descriptor instead.
func (*ProductAttributeListResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{34}
}

func (x *ProductAttributeListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProductAttributeListResp) GetList() []*ProductAttributeListData {
	if x != nil {
		return x.List
	}
	return nil
}

type ProductAttributeUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ProductAttributeCategoryId int64  `protobuf:"varint,2,opt,name=ProductAttributeCategoryId,proto3" json:"ProductAttributeCategoryId,omitempty"`
	Name                       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	SelectType                 string `protobuf:"bytes,4,opt,name=SelectType,proto3" json:"SelectType,omitempty"`
	InputType                  string `protobuf:"bytes,5,opt,name=InputType,proto3" json:"InputType,omitempty"`
	InputList                  string `protobuf:"bytes,6,opt,name=InputList,proto3" json:"InputList,omitempty"`
	Sort                       int64  `protobuf:"varint,7,opt,name=Sort,proto3" json:"Sort,omitempty"`
	FilterType                 string `protobuf:"bytes,8,opt,name=FilterType,proto3" json:"FilterType,omitempty"`
	SearchType                 string `protobuf:"bytes,9,opt,name=SearchType,proto3" json:"SearchType,omitempty"`
	RelatedStatus              string `protobuf:"bytes,10,opt,name=RelatedStatus,proto3" json:"RelatedStatus,omitempty"`
	HandAddStatus              string `protobuf:"bytes,11,opt,name=HandAddStatus,proto3" json:"HandAddStatus,omitempty"`
	Type                       string `protobuf:"bytes,12,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *ProductAttributeUpdateReq) Reset() {
	*x = ProductAttributeUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeUpdateReq) ProtoMessage() {}

func (x *ProductAttributeUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeUpdateReq.ProtoReflect.Descriptor instead.
func (*ProductAttributeUpdateReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{35}
}

func (x *ProductAttributeUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductAttributeUpdateReq) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *ProductAttributeUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductAttributeUpdateReq) GetSelectType() string {
	if x != nil {
		return x.SelectType
	}
	return ""
}

func (x *ProductAttributeUpdateReq) GetInputType() string {
	if x != nil {
		return x.InputType
	}
	return ""
}

func (x *ProductAttributeUpdateReq) GetInputList() string {
	if x != nil {
		return x.InputList
	}
	return ""
}

func (x *ProductAttributeUpdateReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductAttributeUpdateReq) GetFilterType() string {
	if x != nil {
		return x.FilterType
	}
	return ""
}

func (x *ProductAttributeUpdateReq) GetSearchType() string {
	if x != nil {
		return x.SearchType
	}
	return ""
}

func (x *ProductAttributeUpdateReq) GetRelatedStatus() string {
	if x != nil {
		return x.RelatedStatus
	}
	return ""
}

func (x *ProductAttributeUpdateReq) GetHandAddStatus() string {
	if x != nil {
		return x.HandAddStatus
	}
	return ""
}

func (x *ProductAttributeUpdateReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ProductAttributeUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductAttributeUpdateResp) Reset() {
	*x = ProductAttributeUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeUpdateResp) ProtoMessage() {}

func (x *ProductAttributeUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeUpdateResp.ProtoReflect.Descriptor instead.
func (*ProductAttributeUpdateResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{36}
}

func (x *ProductAttributeUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductAttributeDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ProductAttributeDeleteReq) Reset() {
	*x = ProductAttributeDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeDeleteReq) ProtoMessage() {}

func (x *ProductAttributeDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeDeleteReq.ProtoReflect.Descriptor instead.
func (*ProductAttributeDeleteReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{37}
}

func (x *ProductAttributeDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ProductAttributeDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductAttributeDeleteResp) Reset() {
	*x = ProductAttributeDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeDeleteResp) ProtoMessage() {}

func (x *ProductAttributeDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeDeleteResp.ProtoReflect.Descriptor instead.
func (*ProductAttributeDeleteResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{38}
}

func (x *ProductAttributeDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductAttributeCategoryAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *ProductAttributeCategoryAddReq) Reset() {
	*x = ProductAttributeCategoryAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeCategoryAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeCategoryAddReq) ProtoMessage() {}

func (x *ProductAttributeCategoryAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeCategoryAddReq.ProtoReflect.Descriptor instead.
func (*ProductAttributeCategoryAddReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{39}
}

func (x *ProductAttributeCategoryAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProductAttributeCategoryAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductAttributeCategoryAddResp) Reset() {
	*x = ProductAttributeCategoryAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeCategoryAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeCategoryAddResp) ProtoMessage() {}

func (x *ProductAttributeCategoryAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeCategoryAddResp.ProtoReflect.Descriptor instead.
func (*ProductAttributeCategoryAddResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{40}
}

func (x *ProductAttributeCategoryAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductAttributeCategoryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *ProductAttributeCategoryListReq) Reset() {
	*x = ProductAttributeCategoryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeCategoryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeCategoryListReq) ProtoMessage() {}

func (x *ProductAttributeCategoryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeCategoryListReq.ProtoReflect.Descriptor instead.
func (*ProductAttributeCategoryListReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{41}
}

func (x *ProductAttributeCategoryListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ProductAttributeCategoryListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProductAttributeCategoryListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProductAttributeCategoryListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	AttributeCount int64  `protobuf:"varint,3,opt,name=AttributeCount,proto3" json:"AttributeCount,omitempty"`
	ParamCount     int64  `protobuf:"varint,4,opt,name=ParamCount,proto3" json:"ParamCount,omitempty"`
}

func (x *ProductAttributeCategoryListData) Reset() {
	*x = ProductAttributeCategoryListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeCategoryListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeCategoryListData) ProtoMessage() {}

func (x *ProductAttributeCategoryListData) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeCategoryListData.ProtoReflect.Descriptor instead.
func (*ProductAttributeCategoryListData) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{42}
}

func (x *ProductAttributeCategoryListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductAttributeCategoryListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductAttributeCategoryListData) GetAttributeCount() int64 {
	if x != nil {
		return x.AttributeCount
	}
	return 0
}

func (x *ProductAttributeCategoryListData) GetParamCount() int64 {
	if x != nil {
		return x.ParamCount
	}
	return 0
}

type ProductAttributeCategoryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ProductAttributeCategoryListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProductAttributeCategoryListResp) Reset() {
	*x = ProductAttributeCategoryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeCategoryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeCategoryListResp) ProtoMessage() {}

func (x *ProductAttributeCategoryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeCategoryListResp.ProtoReflect.Descriptor instead.
func (*ProductAttributeCategoryListResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{43}
}

func (x *ProductAttributeCategoryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProductAttributeCategoryListResp) GetList() []*ProductAttributeCategoryListData {
	if x != nil {
		return x.List
	}
	return nil
}

type ProductAttributeCategoryUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	AttributeCount int64  `protobuf:"varint,3,opt,name=AttributeCount,proto3" json:"AttributeCount,omitempty"`
	ParamCount     int64  `protobuf:"varint,4,opt,name=ParamCount,proto3" json:"ParamCount,omitempty"`
}

func (x *ProductAttributeCategoryUpdateReq) Reset() {
	*x = ProductAttributeCategoryUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeCategoryUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeCategoryUpdateReq) ProtoMessage() {}

func (x *ProductAttributeCategoryUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeCategoryUpdateReq.ProtoReflect.Descriptor instead.
func (*ProductAttributeCategoryUpdateReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{44}
}

func (x *ProductAttributeCategoryUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductAttributeCategoryUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductAttributeCategoryUpdateReq) GetAttributeCount() int64 {
	if x != nil {
		return x.AttributeCount
	}
	return 0
}

func (x *ProductAttributeCategoryUpdateReq) GetParamCount() int64 {
	if x != nil {
		return x.ParamCount
	}
	return 0
}

type ProductAttributeCategoryUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductAttributeCategoryUpdateResp) Reset() {
	*x = ProductAttributeCategoryUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeCategoryUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeCategoryUpdateResp) ProtoMessage() {}

func (x *ProductAttributeCategoryUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeCategoryUpdateResp.ProtoReflect.Descriptor instead.
func (*ProductAttributeCategoryUpdateResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{45}
}

func (x *ProductAttributeCategoryUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductAttributeCategoryDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ProductAttributeCategoryDeleteReq) Reset() {
	*x = ProductAttributeCategoryDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeCategoryDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeCategoryDeleteReq) ProtoMessage() {}

func (x *ProductAttributeCategoryDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeCategoryDeleteReq.ProtoReflect.Descriptor instead.
func (*ProductAttributeCategoryDeleteReq) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{46}
}

func (x *ProductAttributeCategoryDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ProductAttributeCategoryDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductAttributeCategoryDeleteResp) Reset() {
	*x = ProductAttributeCategoryDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pms_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeCategoryDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeCategoryDeleteResp) ProtoMessage() {}

func (x *ProductAttributeCategoryDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_pms_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeCategoryDeleteResp.ProtoReflect.Descriptor instead.
func (*ProductAttributeCategoryDeleteResp) Descriptor() ([]byte, []int) {
	return file_pms_proto_rawDescGZIP(), []int{47}
}

func (x *ProductAttributeCategoryDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

var File_pms_proto protoreflect.FileDescriptor

var file_pms_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x6d, 0x73,
	0x22, 0xc7, 0x0a, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x46, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x46, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x47, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x69, 0x66, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x47, 0x69, 0x66, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x55, 0x6e, 0x69, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f,
	0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e,
	0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2a,
	0x0a, 0x10, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x74,
	0x6d, 0x6c, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0xda, 0x0a, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x46, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x46, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x50, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x63, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53,
	0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f,
	0x77, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x47, 0x69, 0x66, 0x74, 0x47,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x69, 0x66, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x47, 0x69, 0x66, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74, 0x6d, 0x6c, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74, 0x6d,
	0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2e, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a,
	0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x24, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x27, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x46, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd9, 0x0a,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x46, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x46, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53,
	0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x47, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x69, 0x66, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x47, 0x69, 0x66, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74,
	0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2a, 0x0a,
	0x10, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x74, 0x6d,
	0x6c, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbf, 0x02, 0x0a,
	0x0b, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x69, 0x67, 0x50, 0x69, 0x63,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x69, 0x67, 0x50, 0x69, 0x63, 0x12, 0x1e,
	0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x22,
	0x0a, 0x0c, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x9e, 0x01, 0x0a, 0x0c, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x25, 0x0a, 0x11, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xd1, 0x02, 0x0a, 0x0d, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x69, 0x67, 0x50, 0x69, 0x63,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x69, 0x67, 0x50, 0x69, 0x63, 0x12, 0x1e,
	0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x4d,
	0x0a, 0x0d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd2, 0x02,
	0x0a, 0x0e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x69,
	0x67, 0x50, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x69, 0x67, 0x50,
	0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x25, 0x0a, 0x0f, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x22, 0x0a, 0x0e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x25, 0x0a,
	0x0f, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0xc7, 0x02, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61,
	0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e,
	0x61, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x68,
	0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c,
	0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x39, 0x0a, 0x1b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xd9, 0x02, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4e,
	0x61, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4e, 0x61, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x61, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xda, 0x02, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4e,
	0x61, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4e, 0x61, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2f, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x2c, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2f,
	0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0xfc, 0x02, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x48, 0x61, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2d,
	0x0a, 0x17, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xb7, 0x01,
	0x0a, 0x17, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x8e, 0x03, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8f, 0x03,
	0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x48, 0x61,
	0x6e, 0x64, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x30, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x2d, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x30, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x34, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x6b, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a,
	0x20, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x73, 0x0a,
	0x20, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x35,
	0x0a, 0x21, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x32,
	0xfa, 0x0d, 0x0a, 0x03, 0x50, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x12, 0x12, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x6d, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e,
	0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x6d, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x6d, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x08, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x12, 0x10, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x6d, 0x73, 0x2e,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a,
	0x0e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12,
	0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0b, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0b, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4d, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5a, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x70,
	0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x19,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x6d, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70,
	0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x56, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x6d,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0c, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x64, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x14, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x41, 0x64, 0x64, 0x12, 0x23, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64,
	0x0a, 0x15, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e,
	0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x6a, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x6d,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x07, 0x5a, 0x05,
	0x2e, 0x2f, 0x70, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pms_proto_rawDescOnce sync.Once
	file_pms_proto_rawDescData = file_pms_proto_rawDesc
)

func file_pms_proto_rawDescGZIP() []byte {
	file_pms_proto_rawDescOnce.Do(func() {
		file_pms_proto_rawDescData = protoimpl.X.CompressGZIP(file_pms_proto_rawDescData)
	})
	return file_pms_proto_rawDescData
}

var file_pms_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_pms_proto_goTypes = []interface{}{
	(*ProductAddReq)(nil),                      // 0: pms.ProductAddReq
	(*ProductAddResp)(nil),                     // 1: pms.ProductAddResp
	(*ProductUpdateReq)(nil),                   // 2: pms.ProductUpdateReq
	(*ProductUpdateResp)(nil),                  // 3: pms.ProductUpdateResp
	(*ProductDeleteReq)(nil),                   // 4: pms.ProductDeleteReq
	(*ProductDeleteResp)(nil),                  // 5: pms.ProductDeleteResp
	(*ProductListReq)(nil),                     // 6: pms.ProductListReq
	(*ProductListData)(nil),                    // 7: pms.ProductListData
	(*ProductListResp)(nil),                    // 8: pms.ProductListResp
	(*BrandAddReq)(nil),                        // 9: pms.BrandAddReq
	(*BrandAddResp)(nil),                       // 10: pms.BrandAddResp
	(*BrandListReq)(nil),                       // 11: pms.BrandListReq
	(*BrandListByIdsReq)(nil),                  // 12: pms.BrandListByIdsReq
	(*BrandListData)(nil),                      // 13: pms.BrandListData
	(*BrandListResp)(nil),                      // 14: pms.BrandListResp
	(*BrandUpdateReq)(nil),                     // 15: pms.BrandUpdateReq
	(*BrandUpdateResp)(nil),                    // 16: pms.BrandUpdateResp
	(*BrandDeleteReq)(nil),                     // 17: pms.BrandDeleteReq
	(*BrandDeleteResp)(nil),                    // 18: pms.BrandDeleteResp
	(*ProductCategoryAddReq)(nil),              // 19: pms.ProductCategoryAddReq
	(*ProductCategoryAddResp)(nil),             // 20: pms.ProductCategoryAddResp
	(*ProductCategoryFirstListReq)(nil),        // 21: pms.ProductCategoryFirstListReq
	(*ProductCategorySecondListReq)(nil),       // 22: pms.ProductCategorySecondListReq
	(*ProductCategoryListReq)(nil),             // 23: pms.ProductCategoryListReq
	(*ProductCategoryListData)(nil),            // 24: pms.ProductCategoryListData
	(*ProductCategoryListResp)(nil),            // 25: pms.ProductCategoryListResp
	(*ProductCategoryUpdateReq)(nil),           // 26: pms.ProductCategoryUpdateReq
	(*ProductCategoryUpdateResp)(nil),          // 27: pms.ProductCategoryUpdateResp
	(*ProductCategoryDeleteReq)(nil),           // 28: pms.ProductCategoryDeleteReq
	(*ProductCategoryDeleteResp)(nil),          // 29: pms.ProductCategoryDeleteResp
	(*ProductAttributeAddReq)(nil),             // 30: pms.ProductAttributeAddReq
	(*ProductAttributeAddResp)(nil),            // 31: pms.ProductAttributeAddResp
	(*ProductAttributeListReq)(nil),            // 32: pms.ProductAttributeListReq
	(*ProductAttributeListData)(nil),           // 33: pms.ProductAttributeListData
	(*ProductAttributeListResp)(nil),           // 34: pms.ProductAttributeListResp
	(*ProductAttributeUpdateReq)(nil),          // 35: pms.ProductAttributeUpdateReq
	(*ProductAttributeUpdateResp)(nil),         // 36: pms.ProductAttributeUpdateResp
	(*ProductAttributeDeleteReq)(nil),          // 37: pms.ProductAttributeDeleteReq
	(*ProductAttributeDeleteResp)(nil),         // 38: pms.ProductAttributeDeleteResp
	(*ProductAttributeCategoryAddReq)(nil),     // 39: pms.ProductAttributeCategoryAddReq
	(*ProductAttributeCategoryAddResp)(nil),    // 40: pms.ProductAttributeCategoryAddResp
	(*ProductAttributeCategoryListReq)(nil),    // 41: pms.ProductAttributeCategoryListReq
	(*ProductAttributeCategoryListData)(nil),   // 42: pms.ProductAttributeCategoryListData
	(*ProductAttributeCategoryListResp)(nil),   // 43: pms.ProductAttributeCategoryListResp
	(*ProductAttributeCategoryUpdateReq)(nil),  // 44: pms.ProductAttributeCategoryUpdateReq
	(*ProductAttributeCategoryUpdateResp)(nil), // 45: pms.ProductAttributeCategoryUpdateResp
	(*ProductAttributeCategoryDeleteReq)(nil),  // 46: pms.ProductAttributeCategoryDeleteReq
	(*ProductAttributeCategoryDeleteResp)(nil), // 47: pms.ProductAttributeCategoryDeleteResp
}
var file_pms_proto_depIdxs = []int32{
	7,  // 0: pms.ProductListResp.list:type_name -> pms.ProductListData
	13, // 1: pms.BrandListResp.list:type_name -> pms.BrandListData
	24, // 2: pms.ProductCategoryListResp.list:type_name -> pms.ProductCategoryListData
	33, // 3: pms.ProductAttributeListResp.list:type_name -> pms.ProductAttributeListData
	42, // 4: pms.ProductAttributeCategoryListResp.list:type_name -> pms.ProductAttributeCategoryListData
	0,  // 5: pms.Pms.ProductAdd:input_type -> pms.ProductAddReq
	6,  // 6: pms.Pms.ProductList:input_type -> pms.ProductListReq
	2,  // 7: pms.Pms.ProductUpdate:input_type -> pms.ProductUpdateReq
	4,  // 8: pms.Pms.ProductDelete:input_type -> pms.ProductDeleteReq
	9,  // 9: pms.Pms.BrandAdd:input_type -> pms.BrandAddReq
	11, // 10: pms.Pms.BrandList:input_type -> pms.BrandListReq
	12, // 11: pms.Pms.BrandListByIds:input_type -> pms.BrandListByIdsReq
	15, // 12: pms.Pms.BrandUpdate:input_type -> pms.BrandUpdateReq
	17, // 13: pms.Pms.BrandDelete:input_type -> pms.BrandDeleteReq
	19, // 14: pms.Pms.ProductCategoryAdd:input_type -> pms.ProductCategoryAddReq
	23, // 15: pms.Pms.ProductCategoryList:input_type -> pms.ProductCategoryListReq
	21, // 16: pms.Pms.ProductCategoryFirstList:input_type -> pms.ProductCategoryFirstListReq
	22, // 17: pms.Pms.ProductCategorySecondList:input_type -> pms.ProductCategorySecondListReq
	26, // 18: pms.Pms.ProductCategoryUpdate:input_type -> pms.ProductCategoryUpdateReq
	28, // 19: pms.Pms.ProductCategoryDelete:input_type -> pms.ProductCategoryDeleteReq
	30, // 20: pms.Pms.AttributeAdd:input_type -> pms.ProductAttributeAddReq
	32, // 21: pms.Pms.AttributeList:input_type -> pms.ProductAttributeListReq
	35, // 22: pms.Pms.AttributeUpdate:input_type -> pms.ProductAttributeUpdateReq
	37, // 23: pms.Pms.AttributeDelete:input_type -> pms.ProductAttributeDeleteReq
	39, // 24: pms.Pms.AttributeCategoryAdd:input_type -> pms.ProductAttributeCategoryAddReq
	41, // 25: pms.Pms.AttributeCategoryList:input_type -> pms.ProductAttributeCategoryListReq
	44, // 26: pms.Pms.AttributeCategoryUpdate:input_type -> pms.ProductAttributeCategoryUpdateReq
	46, // 27: pms.Pms.AttributeCategoryDelete:input_type -> pms.ProductAttributeCategoryDeleteReq
	1,  // 28: pms.Pms.ProductAdd:output_type -> pms.ProductAddResp
	8,  // 29: pms.Pms.ProductList:output_type -> pms.ProductListResp
	3,  // 30: pms.Pms.ProductUpdate:output_type -> pms.ProductUpdateResp
	5,  // 31: pms.Pms.ProductDelete:output_type -> pms.ProductDeleteResp
	10, // 32: pms.Pms.BrandAdd:output_type -> pms.BrandAddResp
	14, // 33: pms.Pms.BrandList:output_type -> pms.BrandListResp
	14, // 34: pms.Pms.BrandListByIds:output_type -> pms.BrandListResp
	16, // 35: pms.Pms.BrandUpdate:output_type -> pms.BrandUpdateResp
	18, // 36: pms.Pms.BrandDelete:output_type -> pms.BrandDeleteResp
	20, // 37: pms.Pms.ProductCategoryAdd:output_type -> pms.ProductCategoryAddResp
	25, // 38: pms.Pms.ProductCategoryList:output_type -> pms.ProductCategoryListResp
	25, // 39: pms.Pms.ProductCategoryFirstList:output_type -> pms.ProductCategoryListResp
	25, // 40: pms.Pms.ProductCategorySecondList:output_type -> pms.ProductCategoryListResp
	27, // 41: pms.Pms.ProductCategoryUpdate:output_type -> pms.ProductCategoryUpdateResp
	29, // 42: pms.Pms.ProductCategoryDelete:output_type -> pms.ProductCategoryDeleteResp
	31, // 43: pms.Pms.AttributeAdd:output_type -> pms.ProductAttributeAddResp
	34, // 44: pms.Pms.AttributeList:output_type -> pms.ProductAttributeListResp
	36, // 45: pms.Pms.AttributeUpdate:output_type -> pms.ProductAttributeUpdateResp
	38, // 46: pms.Pms.AttributeDelete:output_type -> pms.ProductAttributeDeleteResp
	40, // 47: pms.Pms.AttributeCategoryAdd:output_type -> pms.ProductAttributeCategoryAddResp
	43, // 48: pms.Pms.AttributeCategoryList:output_type -> pms.ProductAttributeCategoryListResp
	45, // 49: pms.Pms.AttributeCategoryUpdate:output_type -> pms.ProductAttributeCategoryUpdateResp
	47, // 50: pms.Pms.AttributeCategoryDelete:output_type -> pms.ProductAttributeCategoryDeleteResp
	28, // [28:51] is the sub-list for method output_type
	5,  // [5:28] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_pms_proto_init() }
func file_pms_proto_init() {
	if File_pms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryFirstListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategorySecondListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCategoryDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeCategoryAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeCategoryAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeCategoryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeCategoryListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeCategoryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeCategoryUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeCategoryUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeCategoryDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pms_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeCategoryDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pms_proto_goTypes,
		DependencyIndexes: file_pms_proto_depIdxs,
		MessageInfos:      file_pms_proto_msgTypes,
	}.Build()
	File_pms_proto = out.File
	file_pms_proto_rawDesc = nil
	file_pms_proto_goTypes = nil
	file_pms_proto_depIdxs = nil
}
