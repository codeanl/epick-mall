syntax = "proto3";

package sys;

option go_package = "./sys";
//登录Login ------------------------------------------
message LoginReq {
  string username = 1;
  string password = 2;
}
message LoginResp {
  int64  id = 1;
  string username =2;
  string phone = 3;
  string nickname = 4;
  string gender =5;
  string avatar = 6;
  string email = 7;
  string status=8;
  string currentAuthority = 9;
  string AccessToken = 10;
  int64 AccessExpire = 11;
  int64 RefreshAfter = 12;

}
//登录Login ------------------------------------------
//用户详情 ------------------------------------------
message InfoReq {
  int64 UserId = 1;
}
message MenuListTree {
  int64 id = 1;
  string name = 2;
  string icon = 3;
  int64 parent_id = 4;
  string path = 5;
  string vue_path = 6;
  string vue_component = 7;
  string vue_icon = 8;
  string vue_redirect = 9;
}
message InfoResp {
  string avatar = 1;
  string nickname = 2;
  string username=5;
  repeated MenuListTree menuListTree=3;
  repeated string BackgroundUrls =4;
}
//用户详情 ------------------------------------------
//添加用户 ------------------------------------------
message UserAddReq {
  string username = 1;
  string phone = 2;
  string nickname = 3;
  string gender =4;
  string avatar = 5;
  string email = 6;
  string status = 7;
  int64 role_id=8;
  string password =9;
  string last_edit_by=10;
}
message UserAddResp {
  string pong = 1;
}
//添加用户 ------------------------------------------
//更新用户 ------------------------------------------
message UserUpdateReq {
  int64 id=1;
  string username = 2;
  string phone = 3;
  string nickname = 4;
  string gender =5;
  string email = 7;
  string status = 8;
  int64 role_id=9;
  string last_edit_by=10;
}
message UserUpdateResp {
  string pong = 1;
}
//更新用户 ------------------------------------------
//删除用户 ------------------------------------------
message UserDeleteReq {
  repeated int64 ids = 1;
}
message UserDeleteResp {
  string pong = 1;
}
//删除用户 ------------------------------------------
//用户列表 ------------------------------------------
message UserListReq {
  int64 pageNum = 1;
  int64 pageSize = 2;
  string nickname = 3;
  string phone = 4;
  string email = 5;
  string status = 6;
  string gender = 7;
}
message UserList{
  int64 id = 1;
  string username = 2;
  string phone = 3;
  string nickname = 4;
  string gender = 5;
  string avatar = 6;
  string email = 7;
  string status = 8;
  string creat_time = 9;
  string update_time = 10;
  int64 role_id = 11;
  string role_name=12;
}
message UserListResp {
  int64 total = 1;
  repeated UserList list = 2;
}
//用户列表 ------------------------------------------
//重置密码 ------------------------------------------
message ResetPasswordReq {
  int64 id = 1;
  string password=2;
}
message ResetPasswordResp {
  string pong = 1;
}
//重置密码 ------------------------------------------

//添加菜单------------------------------------------
message MenuAddReq {
  string name = 1;
  int64 parent_id = 2;
  string url = 3;
  string perms = 4;
  int64 type = 5;
  string icon = 6;
  int64 order_num = 7;
  string create_by = 8;
  string vuePath =9;
  string vueComponent =10;
  string vueIcon =11;
  string vueRedirect = 12;
  string background_url = 13;
}
message MenuAddResp {
  string pong = 1;
}
//添加菜单------------------------------------------
//菜单列表------------------------------------------
message MenuListReq {
  string name = 1;
  string url = 2;
}

message MenuListData {
  int64 id = 1;
  string name = 2;
  int64 parent_id = 3;
  string url = 4;
  string perms = 5;
  int64 type = 6;
  string icon = 7;
  int64 order_num = 8;
  string create_by = 10;
  string create_time = 11;
  string last_update_by = 12;
  string last_update_time = 13;
  string background_url = 14;
  string vuePath =15;
  string vueComponent =16;
  string vueIcon =17;
  string vueRedirect = 18;
}
message MenuListResp{
  int64 total = 1;
  repeated  MenuListData list = 2;
}
//菜单列表------------------------------------------
//更新菜单------------------------------------------
message MenuUpdateReq {
  int64 id = 1;
  string name = 2;
  int64 parent_id = 3;
  string url = 4;
  string perms = 5;
  int64 type = 6;
  string icon = 7;
  int64 order_num = 8;
  string last_update_by = 9;
  string vuePath = 10;
  string vueComponent = 11;
  string vueIcon = 12;
  string vueRedirect = 13;
  string background_url = 14;
}

message MenuUpdateResp {
  string pong = 1;
}
//更新菜单------------------------------------------
//删除菜单------------------------------------------
message MenuDeleteReq {
  repeated int64 ids = 1;
}

message MenuDeleteResp {
  string pong = 1;
}
//删除菜单------------------------------------------
//添加角色 ------------------------------------------
message RoleAddReq {
  string name = 1;
  string remark = 2;
  string create_by = 3;
}
message RoleAddResp {
  string pong = 1;
}
//添加角色 ------------------------------------------
//角色修改 ------------------------------------------
message RoleUpdateReq {
  int64 id = 1;
  string name = 2;
  string remark = 3;
  string update_by = 4;
}
message RoleUpdateResp {
  string pong = 1;
}
//角色修改 ------------------------------------------
//删除角色------------------------------------------
message RoleDeleteReq {
  repeated int64 ids = 1;
}

message RoleDeleteResp {
  string pong = 1;
}
//删除角色------------------------------------------
//角色列表------------------------------------------
message RoleListReq {
  int64 pageNum = 1;
  int64 pageSize = 2;
  string name = 3;
}
message RoleListData {
  int64 id = 1;
  string name = 2;
  string remark = 3;
  string create_by = 4;
  string create_time = 5;
  string last_update_by = 6;
  string last_update_time = 7;
}

message RoleListResp {
  int64 total = 1;
  repeated  RoleListData list = 2;
}
//角色列表------------------------------------------
//------------------------------------------
message QueryMenuByRoleIdReq {
  int64 id = 1;
}
message QueryMenuByRoleIdResp {
  repeated int64 ids = 1;
}
//------------------------------------------
//------------------------------------------
message UpdateMenuRoleReq {
  int64 roleId = 1;
  repeated int64 menuIds = 2;
  string create_by = 3;
}

message UpdateMenuRoleResp {
  string pong = 1;
}
//------------------------------------------
//登录日志------------------------------------------
message LoginLogAddReq {
  string username = 1;
  string status = 2;
  string ip = 3;
}
message LoginLogAddResp {
  string pong = 1;
}
//登录日志------------------------------------------
//登录日志列表------------------------------------------
message LoginLogListReq {
  int64 pageNum = 1;
  int64 pageSize = 2;
  string username = 3;
  string ip = 4;
}
message LoginLogListData {
  int64 id = 1;
  string username = 2;
  string status = 3;
  string ip = 4;
  string create_time = 6;
  string avatar =7;
}
message LoginLogListResp{
  int64 total = 1;
  repeated  LoginLogListData list = 2;
}
//登录日志列表------------------------------------------
//删除登录日志------------------------------------------
message LoginLogDeleteReq {
  repeated int64 ids = 1;
}

message LoginLogDeleteResp {
  string pong = 1;
}
//删除登录日志------------------------------------------
//操作日志------------------------------------------
message LogAddReq {
  string Username = 1;
  string operation = 2;
  string method = 3;
  string params = 4;
  int64 time = 5;
  string ip = 6;
}
message LogAddResp {
  string pong = 1;
}
//操作日志------------------------------------------
message SysLogListReq {
  int64 pageNum = 1;
  int64 pageSize = 2;
  string username = 3;
  string method = 4;
}

message SysLogListData {
  int64 id = 1;
  string username = 2;
  string operation = 3;
  string method = 4;
  string params = 5;
  int64 time = 6;
  string ip = 7;
  string create_time = 9;
    string avatar =10;
}

message SysLogListResp{
  int64 total = 1;
  repeated  SysLogListData list = 2;
}
message SysLogDeleteReq {
  repeated int64 ids = 1;
}

message SysLogDeleteResp {
  string pong = 1;
}
message PlaceAddReq {
  string name = 1;
  string place = 2;
  string status = 3;
  string pic = 4;
  string phone = 5;
  string principal = 6;
}
message PlaceAddResp {
  string pong = 1;
}
message PlaceListReq {
  string name = 1;
  string place = 2;
  string phone = 3;
  int64 pageNum = 4;
  int64 pageSize = 5;
}

message PlaceListData {
  int64 id = 1;
  string name = 2;
  string place = 3;
  string status = 4;
  string pic = 5;
  string phone = 6;
  string principal = 7;
}
message PlaceListResp{
  int64 total = 1;
  repeated  PlaceListData list = 2;
}
message PlaceUpdateReq {
  int64 id = 1;
  string name = 2;
  string place = 3;
  string status = 4;
  string pic = 5;
  string phone = 6;
  string principal = 7;
}
message PlaceUpdateResp {
  string pong = 1;
}

message PlaceDeleteReq {
  repeated int64 ids = 1;
}
message PlaceDeleteResp {
  string pong = 1;
}

service Sys{
  rpc Login(LoginReq) returns(LoginResp);
  rpc UserInfo(InfoReq) returns(InfoResp);
  rpc UserAdd(UserAddReq) returns(UserAddResp);
  rpc UserUpdate(UserUpdateReq) returns(UserUpdateResp);
  rpc UserDelete(UserDeleteReq) returns(UserDeleteResp);
  rpc UserList(UserListReq) returns(UserListResp);
  rpc ResetPassword(ResetPasswordReq) returns(ResetPasswordResp);

  rpc RoleAdd(RoleAddReq) returns(RoleAddResp);
  rpc RoleUpdate(RoleUpdateReq) returns(RoleUpdateResp);
  rpc RoleDelete(RoleDeleteReq) returns(RoleDeleteResp);
  rpc RoleList(RoleListReq) returns(RoleListResp);
  rpc QueryMenuByRoleId(QueryMenuByRoleIdReq) returns(QueryMenuByRoleIdResp);
  rpc UpdateMenuRole(UpdateMenuRoleReq) returns(UpdateMenuRoleResp);

  rpc MenuAdd(MenuAddReq) returns(MenuAddResp);
  rpc MenuList(MenuListReq) returns(MenuListResp);
  rpc MenuUpdate(MenuUpdateReq) returns(MenuUpdateResp);
  rpc MenuDelete(MenuDeleteReq) returns(MenuDeleteResp);

  rpc LoginLogAdd(LoginLogAddReq) returns(LoginLogAddResp);
  rpc LoginLogList(LoginLogListReq) returns(LoginLogListResp);
  rpc LoginLogDelete(LoginLogDeleteReq) returns(LoginLogDeleteResp);

  rpc LogAdd(LogAddReq) returns(LogAddResp);
  rpc SysLogList(SysLogListReq) returns(SysLogListResp);
  rpc SysLogDelete(SysLogDeleteReq) returns(SysLogDeleteResp);

  rpc PlaceAdd(PlaceAddReq) returns(PlaceAddResp);
  rpc PlaceList(PlaceListReq) returns(PlaceListResp);
  rpc PlaceUpdate(PlaceUpdateReq) returns(PlaceUpdateResp);
  rpc PlaceDelete(PlaceDeleteReq) returns(PlaceDeleteResp);
}